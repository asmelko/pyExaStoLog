<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1322" onload="init(evt)" viewBox="0 0 1200 1322" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1322" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python run.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1311.00"> </text><svg id="frames" x="10" width="1180" total_samples="7832"><g><title>&lt;module&gt; (exastolog/Model.py:33) (18 samples, 0.23%)</title><rect x="0.0000%" y="260" width="0.2298%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="18"/><text x="0.2500%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.0000%" y="276" width="0.2298%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="18"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.0000%" y="292" width="0.2298%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="18"/><text x="0.2500%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.0000%" y="308" width="0.2298%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="18"/><text x="0.2500%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.0000%" y="324" width="0.2298%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="18"/><text x="0.2500%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.0000%" y="340" width="0.2298%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="18"/><text x="0.2500%" y="350.50"></text></g><g><title>&lt;module&gt; (exastolog/TransRateTable.py:32) (18 samples, 0.23%)</title><rect x="0.0000%" y="356" width="0.2298%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="18"/><text x="0.2500%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.0000%" y="372" width="0.2298%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="18"/><text x="0.2500%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.0000%" y="388" width="0.2298%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="18"/><text x="0.2500%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.0000%" y="404" width="0.2298%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="18"/><text x="0.2500%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.0000%" y="420" width="0.2298%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="18"/><text x="0.2500%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.0000%" y="436" width="0.2298%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="18"/><text x="0.2500%" y="446.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:121) (18 samples, 0.23%)</title><rect x="0.2681%" y="772" width="0.2298%" height="15" fill="rgb(216,20,37)" fg:x="21" fg:w="18"/><text x="0.5181%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.2681%" y="788" width="0.2298%" height="15" fill="rgb(206,188,39)" fg:x="21" fg:w="18"/><text x="0.5181%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.2681%" y="804" width="0.2298%" height="15" fill="rgb(217,207,13)" fg:x="21" fg:w="18"/><text x="0.5181%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.2681%" y="820" width="0.2298%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="18"/><text x="0.5181%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.2681%" y="836" width="0.2298%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="18"/><text x="0.5181%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.2681%" y="852" width="0.2298%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="18"/><text x="0.5181%" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_dsolve/__init__.py:58) (18 samples, 0.23%)</title><rect x="0.2681%" y="868" width="0.2298%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="18"/><text x="0.5181%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.2681%" y="884" width="0.2298%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="18"/><text x="0.5181%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.2681%" y="900" width="0.2298%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="18"/><text x="0.5181%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.2681%" y="916" width="0.2298%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="18"/><text x="0.5181%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.2681%" y="932" width="0.2298%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="18"/><text x="0.5181%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.2681%" y="948" width="0.2298%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="18"/><text x="0.5181%" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_dsolve/linsolve.py:15) (18 samples, 0.23%)</title><rect x="0.2681%" y="964" width="0.2298%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="18"/><text x="0.5181%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.2681%" y="980" width="0.2298%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="18"/><text x="0.5181%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (18 samples, 0.23%)</title><rect x="0.2681%" y="996" width="0.2298%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.2681%" y="1012" width="0.2298%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.2681%" y="1028" width="0.2298%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.2681%" y="1044" width="0.2298%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.2681%" y="1060" width="0.2298%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.2681%" y="1076" width="0.2298%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.2681%" y="1092" width="0.2298%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1102.50"></text></g><g><title>&lt;module&gt; (scikits/__init__.py:1) (18 samples, 0.23%)</title><rect x="0.2681%" y="1108" width="0.2298%" height="15" fill="rgb(254,191,54)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.2681%" y="1124" width="0.2298%" height="15" fill="rgb(241,83,37)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.2681%" y="1140" width="0.2298%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.2681%" y="1156" width="0.2298%" height="15" fill="rgb(226,3,54)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.2681%" y="1172" width="0.2298%" height="15" fill="rgb(245,192,40)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.2681%" y="1188" width="0.2298%" height="15" fill="rgb(238,167,29)" fg:x="21" fg:w="18"/><text x="0.5181%" y="1198.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:78) (8 samples, 0.10%)</title><rect x="0.3958%" y="1204" width="0.1021%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (8 samples, 0.10%)</title><rect x="0.3958%" y="1220" width="0.1021%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (8 samples, 0.10%)</title><rect x="0.3958%" y="1236" width="0.1021%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (8 samples, 0.10%)</title><rect x="0.3958%" y="1252" width="0.1021%" height="15" fill="rgb(235,93,37)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (8 samples, 0.10%)</title><rect x="0.3958%" y="1268" width="0.1021%" height="15" fill="rgb(213,116,39)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (8 samples, 0.10%)</title><rect x="0.3958%" y="1284" width="0.1021%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="8"/><text x="0.6458%" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.29%)</title><rect x="0.2298%" y="388" width="0.2937%" height="15" fill="rgb(206,96,30)" fg:x="18" fg:w="23"/><text x="0.4798%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.29%)</title><rect x="0.2298%" y="404" width="0.2937%" height="15" fill="rgb(218,138,4)" fg:x="18" fg:w="23"/><text x="0.4798%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.29%)</title><rect x="0.2298%" y="420" width="0.2937%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="23"/><text x="0.4798%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.2298%" y="436" width="0.2937%" height="15" fill="rgb(239,60,40)" fg:x="18" fg:w="23"/><text x="0.4798%" y="446.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:283) (23 samples, 0.29%)</title><rect x="0.2298%" y="452" width="0.2937%" height="15" fill="rgb(206,27,48)" fg:x="18" fg:w="23"/><text x="0.4798%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (23 samples, 0.29%)</title><rect x="0.2298%" y="468" width="0.2937%" height="15" fill="rgb(225,35,8)" fg:x="18" fg:w="23"/><text x="0.4798%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.2298%" y="484" width="0.2937%" height="15" fill="rgb(250,213,24)" fg:x="18" fg:w="23"/><text x="0.4798%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (23 samples, 0.29%)</title><rect x="0.2298%" y="500" width="0.2937%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="23"/><text x="0.4798%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.29%)</title><rect x="0.2298%" y="516" width="0.2937%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="23"/><text x="0.4798%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.29%)</title><rect x="0.2298%" y="532" width="0.2937%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="23"/><text x="0.4798%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.29%)</title><rect x="0.2298%" y="548" width="0.2937%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="23"/><text x="0.4798%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.2298%" y="564" width="0.2937%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="23"/><text x="0.4798%" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py:185) (23 samples, 0.29%)</title><rect x="0.2298%" y="580" width="0.2937%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="23"/><text x="0.4798%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (23 samples, 0.29%)</title><rect x="0.2298%" y="596" width="0.2937%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="23"/><text x="0.4798%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.29%)</title><rect x="0.2298%" y="612" width="0.2937%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="23"/><text x="0.4798%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.29%)</title><rect x="0.2298%" y="628" width="0.2937%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="23"/><text x="0.4798%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.29%)</title><rect x="0.2298%" y="644" width="0.2937%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="23"/><text x="0.4798%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.2298%" y="660" width="0.2937%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="23"/><text x="0.4798%" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/_laplacian.py:7) (23 samples, 0.29%)</title><rect x="0.2298%" y="676" width="0.2937%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="23"/><text x="0.4798%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (23 samples, 0.29%)</title><rect x="0.2298%" y="692" width="0.2937%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="23"/><text x="0.4798%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.29%)</title><rect x="0.2298%" y="708" width="0.2937%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="23"/><text x="0.4798%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.29%)</title><rect x="0.2298%" y="724" width="0.2937%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="23"/><text x="0.4798%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.29%)</title><rect x="0.2298%" y="740" width="0.2937%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="23"/><text x="0.4798%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.2298%" y="756" width="0.2937%" height="15" fill="rgb(246,177,23)" fg:x="18" fg:w="23"/><text x="0.4798%" y="766.50"></text></g><g><title>&lt;module&gt; (exastolog/__init__.py:1) (45 samples, 0.57%)</title><rect x="0.0000%" y="164" width="0.5746%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="45"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (45 samples, 0.57%)</title><rect x="0.0000%" y="180" width="0.5746%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="45"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (45 samples, 0.57%)</title><rect x="0.0000%" y="196" width="0.5746%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="45"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (45 samples, 0.57%)</title><rect x="0.0000%" y="212" width="0.5746%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="45"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (45 samples, 0.57%)</title><rect x="0.0000%" y="228" width="0.5746%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="45"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (45 samples, 0.57%)</title><rect x="0.0000%" y="244" width="0.5746%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="45"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (exastolog/Model.py:35) (27 samples, 0.34%)</title><rect x="0.2298%" y="260" width="0.3447%" height="15" fill="rgb(207,117,47)" fg:x="18" fg:w="27"/><text x="0.4798%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (27 samples, 0.34%)</title><rect x="0.2298%" y="276" width="0.3447%" height="15" fill="rgb(249,43,39)" fg:x="18" fg:w="27"/><text x="0.4798%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (27 samples, 0.34%)</title><rect x="0.2298%" y="292" width="0.3447%" height="15" fill="rgb(209,38,44)" fg:x="18" fg:w="27"/><text x="0.4798%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (27 samples, 0.34%)</title><rect x="0.2298%" y="308" width="0.3447%" height="15" fill="rgb(236,212,23)" fg:x="18" fg:w="27"/><text x="0.4798%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (27 samples, 0.34%)</title><rect x="0.2298%" y="324" width="0.3447%" height="15" fill="rgb(242,79,21)" fg:x="18" fg:w="27"/><text x="0.4798%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (27 samples, 0.34%)</title><rect x="0.2298%" y="340" width="0.3447%" height="15" fill="rgb(211,96,35)" fg:x="18" fg:w="27"/><text x="0.4798%" y="350.50"></text></g><g><title>&lt;module&gt; (exastolog/StateTransitionGraph.py:32) (27 samples, 0.34%)</title><rect x="0.2298%" y="356" width="0.3447%" height="15" fill="rgb(253,215,40)" fg:x="18" fg:w="27"/><text x="0.4798%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (27 samples, 0.34%)</title><rect x="0.2298%" y="372" width="0.3447%" height="15" fill="rgb(211,81,21)" fg:x="18" fg:w="27"/><text x="0.4798%" y="382.50"></text></g><g><title>&lt;module&gt; (run.py:1) (68 samples, 0.87%)</title><rect x="0.0000%" y="68" width="0.8682%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="68"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (68 samples, 0.87%)</title><rect x="0.0000%" y="84" width="0.8682%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="68"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (68 samples, 0.87%)</title><rect x="0.0000%" y="100" width="0.8682%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="68"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (68 samples, 0.87%)</title><rect x="0.0000%" y="116" width="0.8682%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="68"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (68 samples, 0.87%)</title><rect x="0.0000%" y="132" width="0.8682%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="68"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (68 samples, 0.87%)</title><rect x="0.0000%" y="148" width="0.8682%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="68"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (exastolog/__init__.py:2) (23 samples, 0.29%)</title><rect x="0.5746%" y="164" width="0.2937%" height="15" fill="rgb(235,124,12)" fg:x="45" fg:w="23"/><text x="0.8246%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (23 samples, 0.29%)</title><rect x="0.5746%" y="180" width="0.2937%" height="15" fill="rgb(224,169,11)" fg:x="45" fg:w="23"/><text x="0.8246%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.29%)</title><rect x="0.5746%" y="196" width="0.2937%" height="15" fill="rgb(250,166,2)" fg:x="45" fg:w="23"/><text x="0.8246%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.29%)</title><rect x="0.5746%" y="212" width="0.2937%" height="15" fill="rgb(242,216,29)" fg:x="45" fg:w="23"/><text x="0.8246%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.29%)</title><rect x="0.5746%" y="228" width="0.2937%" height="15" fill="rgb(230,116,27)" fg:x="45" fg:w="23"/><text x="0.8246%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.29%)</title><rect x="0.5746%" y="244" width="0.2937%" height="15" fill="rgb(228,99,48)" fg:x="45" fg:w="23"/><text x="0.8246%" y="254.50"></text></g><g><title>&lt;module&gt; (exastolog/Simulation.py:35) (18 samples, 0.23%)</title><rect x="0.6384%" y="260" width="0.2298%" height="15" fill="rgb(253,11,6)" fg:x="50" fg:w="18"/><text x="0.8884%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.23%)</title><rect x="0.6384%" y="276" width="0.2298%" height="15" fill="rgb(247,143,39)" fg:x="50" fg:w="18"/><text x="0.8884%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.23%)</title><rect x="0.6384%" y="292" width="0.2298%" height="15" fill="rgb(236,97,10)" fg:x="50" fg:w="18"/><text x="0.8884%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.23%)</title><rect x="0.6384%" y="308" width="0.2298%" height="15" fill="rgb(233,208,19)" fg:x="50" fg:w="18"/><text x="0.8884%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.23%)</title><rect x="0.6384%" y="324" width="0.2298%" height="15" fill="rgb(216,164,2)" fg:x="50" fg:w="18"/><text x="0.8884%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.23%)</title><rect x="0.6384%" y="340" width="0.2298%" height="15" fill="rgb(220,129,5)" fg:x="50" fg:w="18"/><text x="0.8884%" y="350.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:112) (37 samples, 0.47%)</title><rect x="0.8810%" y="132" width="0.4724%" height="15" fill="rgb(242,17,10)" fg:x="69" fg:w="37"/><text x="1.1310%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:114) (8 samples, 0.10%)</title><rect x="1.4173%" y="132" width="0.1021%" height="15" fill="rgb(242,107,0)" fg:x="111" fg:w="8"/><text x="1.6673%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:115) (17 samples, 0.22%)</title><rect x="1.5194%" y="132" width="0.2171%" height="15" fill="rgb(251,28,31)" fg:x="119" fg:w="17"/><text x="1.7694%" y="142.50"></text></g><g><title>fcn_gen_node_update (exastolog/StateTransitionTable.py:51) (9 samples, 0.11%)</title><rect x="1.8514%" y="196" width="0.1149%" height="15" fill="rgb(233,223,10)" fg:x="145" fg:w="9"/><text x="2.1014%" y="206.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:121) (19 samples, 0.24%)</title><rect x="1.7620%" y="132" width="0.2426%" height="15" fill="rgb(215,21,27)" fg:x="138" fg:w="19"/><text x="2.0120%" y="142.50"></text></g><g><title>fcn_build_update_table (exastolog/StateTransitionTable.py:77) (15 samples, 0.19%)</title><rect x="1.8131%" y="148" width="0.1915%" height="15" fill="rgb(232,23,21)" fg:x="142" fg:w="15"/><text x="2.0631%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:78) (15 samples, 0.19%)</title><rect x="1.8131%" y="164" width="0.1915%" height="15" fill="rgb(244,5,23)" fg:x="142" fg:w="15"/><text x="2.0631%" y="174.50"></text></g><g><title>fcn_gen_node_update (exastolog/StateTransitionTable.py:67) (12 samples, 0.15%)</title><rect x="1.8514%" y="180" width="0.1532%" height="15" fill="rgb(226,81,46)" fg:x="145" fg:w="12"/><text x="2.1014%" y="190.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:336) (17 samples, 0.22%)</title><rect x="2.0940%" y="228" width="0.2171%" height="15" fill="rgb(247,70,30)" fg:x="164" fg:w="17"/><text x="2.3440%" y="238.50"></text></g><g><title>intersect1d (numpy/lib/arraysetops.py:445) (27 samples, 0.34%)</title><rect x="2.0557%" y="180" width="0.3447%" height="15" fill="rgb(212,68,19)" fg:x="161" fg:w="27"/><text x="2.3057%" y="190.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:180) (27 samples, 0.34%)</title><rect x="2.0557%" y="196" width="0.3447%" height="15" fill="rgb(240,187,13)" fg:x="161" fg:w="27"/><text x="2.3057%" y="206.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:274) (27 samples, 0.34%)</title><rect x="2.0557%" y="212" width="0.3447%" height="15" fill="rgb(223,113,26)" fg:x="161" fg:w="27"/><text x="2.3057%" y="222.50"></text></g><g><title>intersect1d (numpy/lib/arraysetops.py:455) (63 samples, 0.80%)</title><rect x="2.4387%" y="180" width="0.8044%" height="15" fill="rgb(206,192,2)" fg:x="191" fg:w="63"/><text x="2.6887%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:124) (100 samples, 1.28%)</title><rect x="2.0046%" y="148" width="1.2768%" height="15" fill="rgb(241,108,4)" fg:x="157" fg:w="100"/><text x="2.2546%" y="158.50"></text></g><g><title>intersect1d (&lt;__array_function__ internals&gt;:180) (99 samples, 1.26%)</title><rect x="2.0174%" y="164" width="1.2640%" height="15" fill="rgb(247,173,49)" fg:x="158" fg:w="99"/><text x="2.2674%" y="174.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:102) (225 samples, 2.87%)</title><rect x="3.3580%" y="164" width="2.8728%" height="15" fill="rgb(224,114,35)" fg:x="263" fg:w="225"/><text x="3.6080%" y="174.50">fc..</text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:109) (13 samples, 0.17%)</title><rect x="6.2308%" y="164" width="0.1660%" height="15" fill="rgb(245,159,27)" fg:x="488" fg:w="13"/><text x="6.4808%" y="174.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:90) (33 samples, 0.42%)</title><rect x="6.3968%" y="164" width="0.4213%" height="15" fill="rgb(245,172,44)" fg:x="501" fg:w="33"/><text x="6.6468%" y="174.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:97) (39 samples, 0.50%)</title><rect x="6.8182%" y="164" width="0.4980%" height="15" fill="rgb(236,23,11)" fg:x="534" fg:w="39"/><text x="7.0682%" y="174.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:123) (420 samples, 5.36%)</title><rect x="2.0046%" y="132" width="5.3626%" height="15" fill="rgb(205,117,38)" fg:x="157" fg:w="420"/><text x="2.2546%" y="142.50">fcn_bui..</text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:126) (320 samples, 4.09%)</title><rect x="3.2814%" y="148" width="4.0858%" height="15" fill="rgb(237,72,25)" fg:x="257" fg:w="320"/><text x="3.5314%" y="158.50">&lt;lis..</text></g><g><title>_unique1d (numpy/lib/arraysetops.py:336) (19 samples, 0.24%)</title><rect x="7.4055%" y="228" width="0.2426%" height="15" fill="rgb(244,70,9)" fg:x="580" fg:w="19"/><text x="7.6555%" y="238.50"></text></g><g><title>intersect1d (numpy/lib/arraysetops.py:444) (27 samples, 0.34%)</title><rect x="7.3800%" y="180" width="0.3447%" height="15" fill="rgb(217,125,39)" fg:x="578" fg:w="27"/><text x="7.6300%" y="190.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:180) (26 samples, 0.33%)</title><rect x="7.3927%" y="196" width="0.3320%" height="15" fill="rgb(235,36,10)" fg:x="579" fg:w="26"/><text x="7.6427%" y="206.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:274) (26 samples, 0.33%)</title><rect x="7.3927%" y="212" width="0.3320%" height="15" fill="rgb(251,123,47)" fg:x="579" fg:w="26"/><text x="7.6427%" y="222.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:336) (22 samples, 0.28%)</title><rect x="7.7630%" y="228" width="0.2809%" height="15" fill="rgb(221,13,13)" fg:x="608" fg:w="22"/><text x="8.0130%" y="238.50"></text></g><g><title>intersect1d (numpy/lib/arraysetops.py:445) (32 samples, 0.41%)</title><rect x="7.7247%" y="180" width="0.4086%" height="15" fill="rgb(238,131,9)" fg:x="605" fg:w="32"/><text x="7.9747%" y="190.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:180) (32 samples, 0.41%)</title><rect x="7.7247%" y="196" width="0.4086%" height="15" fill="rgb(211,50,8)" fg:x="605" fg:w="32"/><text x="7.9747%" y="206.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:274) (32 samples, 0.41%)</title><rect x="7.7247%" y="212" width="0.4086%" height="15" fill="rgb(245,182,24)" fg:x="605" fg:w="32"/><text x="7.9747%" y="222.50"></text></g><g><title>intersect1d (numpy/lib/arraysetops.py:455) (130 samples, 1.66%)</title><rect x="8.1588%" y="180" width="1.6599%" height="15" fill="rgb(242,14,37)" fg:x="639" fg:w="130"/><text x="8.4088%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:132) (209 samples, 2.67%)</title><rect x="7.3672%" y="148" width="2.6685%" height="15" fill="rgb(246,228,12)" fg:x="577" fg:w="209"/><text x="7.6172%" y="158.50">&lt;l..</text></g><g><title>intersect1d (&lt;__array_function__ internals&gt;:180) (209 samples, 2.67%)</title><rect x="7.3672%" y="164" width="2.6685%" height="15" fill="rgb(213,55,15)" fg:x="577" fg:w="209"/><text x="7.6172%" y="174.50">in..</text></g><g><title>intersect1d (numpy/lib/arraysetops.py:458) (11 samples, 0.14%)</title><rect x="9.8953%" y="180" width="0.1404%" height="15" fill="rgb(209,9,3)" fg:x="775" fg:w="11"/><text x="10.1453%" y="190.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:102) (251 samples, 3.20%)</title><rect x="10.1379%" y="164" width="3.2048%" height="15" fill="rgb(230,59,30)" fg:x="794" fg:w="251"/><text x="10.3879%" y="174.50">fcn..</text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:109) (8 samples, 0.10%)</title><rect x="13.3427%" y="164" width="0.1021%" height="15" fill="rgb(209,121,21)" fg:x="1045" fg:w="8"/><text x="13.5927%" y="174.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:90) (11 samples, 0.14%)</title><rect x="13.4448%" y="164" width="0.1404%" height="15" fill="rgb(220,109,13)" fg:x="1053" fg:w="11"/><text x="13.6948%" y="174.50"></text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:97) (22 samples, 0.28%)</title><rect x="13.5853%" y="164" width="0.2809%" height="15" fill="rgb(232,18,1)" fg:x="1064" fg:w="22"/><text x="13.8353%" y="174.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:131) (521 samples, 6.65%)</title><rect x="7.3672%" y="132" width="6.6522%" height="15" fill="rgb(215,41,42)" fg:x="577" fg:w="521"/><text x="7.6172%" y="142.50">fcn_build..</text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:134) (310 samples, 3.96%)</title><rect x="10.0613%" y="148" width="3.9581%" height="15" fill="rgb(224,123,36)" fg:x="788" fg:w="310"/><text x="10.3113%" y="158.50">&lt;lis..</text></g><g><title>fcn_states_inds (exastolog/StateTransitionTable.py:99) (12 samples, 0.15%)</title><rect x="13.8662%" y="164" width="0.1532%" height="15" fill="rgb(240,125,3)" fg:x="1086" fg:w="12"/><text x="14.1162%" y="174.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:180) (12 samples, 0.15%)</title><rect x="13.8662%" y="180" width="0.1532%" height="15" fill="rgb(205,98,50)" fg:x="1086" fg:w="12"/><text x="14.1162%" y="190.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (12 samples, 0.15%)</title><rect x="13.8662%" y="196" width="0.1532%" height="15" fill="rgb(205,185,37)" fg:x="1086" fg:w="12"/><text x="14.1162%" y="206.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (12 samples, 0.15%)</title><rect x="13.8662%" y="212" width="0.1532%" height="15" fill="rgb(238,207,15)" fg:x="1086" fg:w="12"/><text x="14.1162%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:140) (16 samples, 0.20%)</title><rect x="14.0194%" y="148" width="0.2043%" height="15" fill="rgb(213,199,42)" fg:x="1098" fg:w="16"/><text x="14.2694%" y="158.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (16 samples, 0.20%)</title><rect x="14.0194%" y="164" width="0.2043%" height="15" fill="rgb(235,201,11)" fg:x="1098" fg:w="16"/><text x="14.2694%" y="174.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:139) (23 samples, 0.29%)</title><rect x="14.0194%" y="132" width="0.2937%" height="15" fill="rgb(207,46,11)" fg:x="1098" fg:w="23"/><text x="14.2694%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:164) (9 samples, 0.11%)</title><rect x="14.4663%" y="132" width="0.1149%" height="15" fill="rgb(241,35,35)" fg:x="1133" fg:w="9"/><text x="14.7163%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (9 samples, 0.11%)</title><rect x="14.4663%" y="148" width="0.1149%" height="15" fill="rgb(243,32,47)" fg:x="1133" fg:w="9"/><text x="14.7163%" y="158.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:165) (17 samples, 0.22%)</title><rect x="14.5812%" y="132" width="0.2171%" height="15" fill="rgb(247,202,23)" fg:x="1142" fg:w="17"/><text x="14.8312%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (17 samples, 0.22%)</title><rect x="14.5812%" y="148" width="0.2171%" height="15" fill="rgb(219,102,11)" fg:x="1142" fg:w="17"/><text x="14.8312%" y="158.50"></text></g><g><title>__init__ (exastolog/Model.py:49) (1,119 samples, 14.29%)</title><rect x="0.8810%" y="84" width="14.2875%" height="15" fill="rgb(243,110,44)" fg:x="69" fg:w="1119"/><text x="1.1310%" y="94.50">__init__ (exastolog/Mo..</text></g><g><title>buildStateTransitionTable (exastolog/Model.py:65) (1,119 samples, 14.29%)</title><rect x="0.8810%" y="100" width="14.2875%" height="15" fill="rgb(222,74,54)" fg:x="69" fg:w="1119"/><text x="1.1310%" y="110.50">buildStateTransitionTa..</text></g><g><title>__init__ (exastolog/StateTransitionTable.py:43) (1,119 samples, 14.29%)</title><rect x="0.8810%" y="116" width="14.2875%" height="15" fill="rgb(216,99,12)" fg:x="69" fg:w="1119"/><text x="1.1310%" y="126.50">__init__ (exastolog/St..</text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:169) (23 samples, 0.29%)</title><rect x="14.8749%" y="132" width="0.2937%" height="15" fill="rgb(226,22,26)" fg:x="1165" fg:w="23"/><text x="15.1249%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (23 samples, 0.29%)</title><rect x="14.8749%" y="148" width="0.2937%" height="15" fill="rgb(217,163,10)" fg:x="1165" fg:w="23"/><text x="15.1249%" y="158.50"></text></g><g><title>tocsr (scipy/sparse/_coo.py:405) (32 samples, 0.41%)</title><rect x="15.2451%" y="196" width="0.4086%" height="15" fill="rgb(213,25,53)" fg:x="1194" fg:w="32"/><text x="15.4951%" y="206.50"></text></g><g><title>sum_duplicates (scipy/sparse/_compressed.py:1118) (14 samples, 0.18%)</title><rect x="15.6665%" y="212" width="0.1788%" height="15" fill="rgb(252,105,26)" fg:x="1227" fg:w="14"/><text x="15.9165%" y="222.50"></text></g><g><title>sort_indices (scipy/sparse/_compressed.py:1164) (14 samples, 0.18%)</title><rect x="15.6665%" y="228" width="0.1788%" height="15" fill="rgb(220,39,43)" fg:x="1227" fg:w="14"/><text x="15.9165%" y="238.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:52) (58 samples, 0.74%)</title><rect x="15.2451%" y="148" width="0.7406%" height="15" fill="rgb(229,68,48)" fg:x="1194" fg:w="58"/><text x="15.4951%" y="158.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:33) (58 samples, 0.74%)</title><rect x="15.2451%" y="164" width="0.7406%" height="15" fill="rgb(252,8,32)" fg:x="1194" fg:w="58"/><text x="15.4951%" y="174.50"></text></g><g><title>asformat (scipy/sparse/_base.py:377) (58 samples, 0.74%)</title><rect x="15.2451%" y="180" width="0.7406%" height="15" fill="rgb(223,20,43)" fg:x="1194" fg:w="58"/><text x="15.4951%" y="190.50"></text></g><g><title>tocsr (scipy/sparse/_coo.py:410) (26 samples, 0.33%)</title><rect x="15.6537%" y="196" width="0.3320%" height="15" fill="rgb(229,81,49)" fg:x="1226" fg:w="26"/><text x="15.9037%" y="206.50"></text></g><g><title>sum_duplicates (scipy/sparse/_compressed.py:1121) (11 samples, 0.14%)</title><rect x="15.8453%" y="212" width="0.1404%" height="15" fill="rgb(236,28,36)" fg:x="1241" fg:w="11"/><text x="16.0953%" y="222.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:50) (70 samples, 0.89%)</title><rect x="15.2451%" y="132" width="0.8938%" height="15" fill="rgb(249,185,26)" fg:x="1194" fg:w="70"/><text x="15.4951%" y="142.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:53) (12 samples, 0.15%)</title><rect x="15.9857%" y="148" width="0.1532%" height="15" fill="rgb(249,174,33)" fg:x="1252" fg:w="12"/><text x="16.2357%" y="158.50"></text></g><g><title>__init__ (scipy/sparse/_coo.py:161) (11 samples, 0.14%)</title><rect x="15.9985%" y="164" width="0.1404%" height="15" fill="rgb(233,201,37)" fg:x="1253" fg:w="11"/><text x="16.2485%" y="174.50"></text></g><g><title>__add__ (scipy/sparse/_base.py:472) (9 samples, 0.11%)</title><rect x="16.2155%" y="148" width="0.1149%" height="15" fill="rgb(221,78,26)" fg:x="1270" fg:w="9"/><text x="16.4655%" y="158.50"></text></g><g><title>_add_sparse (scipy/sparse/_compressed.py:360) (9 samples, 0.11%)</title><rect x="16.2155%" y="164" width="0.1149%" height="15" fill="rgb(250,127,30)" fg:x="1270" fg:w="9"/><text x="16.4655%" y="174.50"></text></g><g><title>_binopt (scipy/sparse/_compressed.py:1258) (9 samples, 0.11%)</title><rect x="16.2155%" y="180" width="0.1149%" height="15" fill="rgb(230,49,44)" fg:x="1270" fg:w="9"/><text x="16.4655%" y="190.50"></text></g><g><title>__sub__ (scipy/sparse/_base.py:491) (11 samples, 0.14%)</title><rect x="16.3304%" y="148" width="0.1404%" height="15" fill="rgb(229,67,23)" fg:x="1279" fg:w="11"/><text x="16.5804%" y="158.50"></text></g><g><title>_sub_sparse (scipy/sparse/_base.py:453) (11 samples, 0.14%)</title><rect x="16.3304%" y="164" width="0.1404%" height="15" fill="rgb(249,83,47)" fg:x="1279" fg:w="11"/><text x="16.5804%" y="174.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:59) (29 samples, 0.37%)</title><rect x="16.2028%" y="132" width="0.3703%" height="15" fill="rgb(215,43,3)" fg:x="1269" fg:w="29"/><text x="16.4528%" y="142.50"></text></g><g><title>__mul__ (scipy/sparse/_base.py:590) (12 samples, 0.15%)</title><rect x="16.5730%" y="148" width="0.1532%" height="15" fill="rgb(238,154,13)" fg:x="1298" fg:w="12"/><text x="16.8230%" y="158.50"></text></g><g><title>_mul_dispatch (scipy/sparse/_base.py:536) (12 samples, 0.15%)</title><rect x="16.5730%" y="164" width="0.1532%" height="15" fill="rgb(219,56,2)" fg:x="1298" fg:w="12"/><text x="16.8230%" y="174.50"></text></g><g><title>_mul_scalar (scipy/sparse/_data.py:124) (12 samples, 0.15%)</title><rect x="16.5730%" y="180" width="0.1532%" height="15" fill="rgb(233,0,4)" fg:x="1298" fg:w="12"/><text x="16.8230%" y="190.50"></text></g><g><title>&lt;module&gt; (run.py:3) (1,254 samples, 16.01%)</title><rect x="0.8682%" y="68" width="16.0112%" height="15" fill="rgb(235,30,7)" fg:x="68" fg:w="1254"/><text x="1.1182%" y="78.50">&lt;module&gt; (run.py:3)</text></g><g><title>__init__ (exastolog/Model.py:51) (134 samples, 1.71%)</title><rect x="15.1685%" y="84" width="1.7109%" height="15" fill="rgb(250,79,13)" fg:x="1188" fg:w="134"/><text x="15.4185%" y="94.50"></text></g><g><title>buildStateTransitionGraph (exastolog/Model.py:73) (134 samples, 1.71%)</title><rect x="15.1685%" y="100" width="1.7109%" height="15" fill="rgb(211,146,34)" fg:x="1188" fg:w="134"/><text x="15.4185%" y="110.50"></text></g><g><title>__init__ (exastolog/StateTransitionGraph.py:39) (134 samples, 1.71%)</title><rect x="15.1685%" y="116" width="1.7109%" height="15" fill="rgb(228,22,38)" fg:x="1188" fg:w="134"/><text x="15.4185%" y="126.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:62) (24 samples, 0.31%)</title><rect x="16.5730%" y="132" width="0.3064%" height="15" fill="rgb(235,168,5)" fg:x="1298" fg:w="24"/><text x="16.8230%" y="142.50"></text></g><g><title>__sub__ (scipy/sparse/_base.py:491) (12 samples, 0.15%)</title><rect x="16.7263%" y="148" width="0.1532%" height="15" fill="rgb(221,155,16)" fg:x="1310" fg:w="12"/><text x="16.9763%" y="158.50"></text></g><g><title>_sub_sparse (scipy/sparse/_compressed.py:363) (12 samples, 0.15%)</title><rect x="16.7263%" y="164" width="0.1532%" height="15" fill="rgb(215,215,53)" fg:x="1310" fg:w="12"/><text x="16.9763%" y="174.50"></text></g><g><title>_binopt (scipy/sparse/_compressed.py:1258) (9 samples, 0.11%)</title><rect x="16.7646%" y="180" width="0.1149%" height="15" fill="rgb(223,4,10)" fg:x="1313" fg:w="9"/><text x="17.0146%" y="190.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:46) (31 samples, 0.40%)</title><rect x="16.8795%" y="116" width="0.3958%" height="15" fill="rgb(234,103,6)" fg:x="1322" fg:w="31"/><text x="17.1295%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:48) (8 samples, 0.10%)</title><rect x="17.3136%" y="116" width="0.1021%" height="15" fill="rgb(227,97,0)" fg:x="1356" fg:w="8"/><text x="17.5636%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:82) (9 samples, 0.11%)</title><rect x="17.5179%" y="116" width="0.1149%" height="15" fill="rgb(234,150,53)" fg:x="1372" fg:w="9"/><text x="17.7679%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:83) (33 samples, 0.42%)</title><rect x="17.6328%" y="116" width="0.4213%" height="15" fill="rgb(228,201,54)" fg:x="1381" fg:w="33"/><text x="17.8828%" y="126.50"></text></g><g><title>__init__ (exastolog/Simulation.py:41) (168 samples, 2.15%)</title><rect x="16.8795%" y="84" width="2.1450%" height="15" fill="rgb(222,22,37)" fg:x="1322" fg:w="168"/><text x="17.1295%" y="94.50">_..</text></g><g><title>__init__ (exastolog/InitialState.py:38) (168 samples, 2.15%)</title><rect x="16.8795%" y="100" width="2.1450%" height="15" fill="rgb(237,53,32)" fg:x="1322" fg:w="168"/><text x="17.1295%" y="110.50">_..</text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:98) (76 samples, 0.97%)</title><rect x="18.0541%" y="116" width="0.9704%" height="15" fill="rgb(233,25,53)" fg:x="1414" fg:w="76"/><text x="18.3041%" y="126.50"></text></g><g><title>tocsc (scipy/sparse/_csr.py:179) (22 samples, 0.28%)</title><rect x="19.0501%" y="164" width="0.2809%" height="15" fill="rgb(210,40,34)" fg:x="1492" fg:w="22"/><text x="19.3001%" y="174.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:140) (23 samples, 0.29%)</title><rect x="19.0501%" y="116" width="0.2937%" height="15" fill="rgb(241,220,44)" fg:x="1492" fg:w="23"/><text x="19.3001%" y="126.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:33) (23 samples, 0.29%)</title><rect x="19.0501%" y="132" width="0.2937%" height="15" fill="rgb(235,28,35)" fg:x="1492" fg:w="23"/><text x="19.3001%" y="142.50"></text></g><g><title>asformat (scipy/sparse/_base.py:377) (23 samples, 0.29%)</title><rect x="19.0501%" y="148" width="0.2937%" height="15" fill="rgb(210,56,17)" fg:x="1492" fg:w="23"/><text x="19.3001%" y="158.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:142) (58 samples, 0.74%)</title><rect x="19.4076%" y="116" width="0.7406%" height="15" fill="rgb(224,130,29)" fg:x="1520" fg:w="58"/><text x="19.6576%" y="126.50"></text></g><g><title>tocsr (scipy/sparse/_csc.py:140) (21 samples, 0.27%)</title><rect x="19.8800%" y="132" width="0.2681%" height="15" fill="rgb(235,212,8)" fg:x="1557" fg:w="21"/><text x="20.1300%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:145) (15 samples, 0.19%)</title><rect x="20.1481%" y="116" width="0.1915%" height="15" fill="rgb(223,33,50)" fg:x="1578" fg:w="15"/><text x="20.3981%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:146) (8 samples, 0.10%)</title><rect x="20.3396%" y="116" width="0.1021%" height="15" fill="rgb(219,149,13)" fg:x="1593" fg:w="8"/><text x="20.5896%" y="126.50"></text></g><g><title>_validate_indices (scipy/sparse/_index.py:152) (15 samples, 0.19%)</title><rect x="20.4418%" y="148" width="0.1915%" height="15" fill="rgb(250,156,29)" fg:x="1601" fg:w="15"/><text x="20.6918%" y="158.50"></text></g><g><title>isintlike (scipy/sparse/_sputils.py:222) (15 samples, 0.19%)</title><rect x="20.4418%" y="164" width="0.1915%" height="15" fill="rgb(216,193,19)" fg:x="1601" fg:w="15"/><text x="20.6918%" y="174.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:180) (15 samples, 0.19%)</title><rect x="20.4418%" y="180" width="0.1915%" height="15" fill="rgb(216,135,14)" fg:x="1601" fg:w="15"/><text x="20.6918%" y="190.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3156) (15 samples, 0.19%)</title><rect x="20.4418%" y="196" width="0.1915%" height="15" fill="rgb(241,47,5)" fg:x="1601" fg:w="15"/><text x="20.6918%" y="206.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (36 samples, 0.46%)</title><rect x="20.4418%" y="132" width="0.4597%" height="15" fill="rgb(233,42,35)" fg:x="1601" fg:w="36"/><text x="20.6918%" y="142.50"></text></g><g><title>_validate_indices (scipy/sparse/_index.py:168) (9 samples, 0.11%)</title><rect x="20.7865%" y="148" width="0.1149%" height="15" fill="rgb(231,13,6)" fg:x="1628" fg:w="9"/><text x="21.0365%" y="158.50"></text></g><g><title>_asindices (scipy/sparse/_index.py:178) (9 samples, 0.11%)</title><rect x="20.7865%" y="164" width="0.1149%" height="15" fill="rgb(207,181,40)" fg:x="1628" fg:w="9"/><text x="21.0365%" y="174.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:159) (43 samples, 0.55%)</title><rect x="20.4418%" y="116" width="0.5490%" height="15" fill="rgb(254,173,49)" fg:x="1601" fg:w="43"/><text x="20.6918%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:163) (94 samples, 1.20%)</title><rect x="21.0802%" y="116" width="1.2002%" height="15" fill="rgb(221,1,38)" fg:x="1651" fg:w="94"/><text x="21.3302%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionSubGraphs.py:163) (94 samples, 1.20%)</title><rect x="21.0802%" y="132" width="1.2002%" height="15" fill="rgb(206,124,46)" fg:x="1651" fg:w="94"/><text x="21.3302%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:164) (14 samples, 0.18%)</title><rect x="22.2804%" y="116" width="0.1788%" height="15" fill="rgb(249,21,11)" fg:x="1745" fg:w="14"/><text x="22.5304%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:165) (17 samples, 0.22%)</title><rect x="22.4591%" y="116" width="0.2171%" height="15" fill="rgb(222,201,40)" fg:x="1759" fg:w="17"/><text x="22.7091%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:169) (73 samples, 0.93%)</title><rect x="22.6762%" y="116" width="0.9321%" height="15" fill="rgb(235,61,29)" fg:x="1776" fg:w="73"/><text x="22.9262%" y="126.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (10 samples, 0.13%)</title><rect x="23.6083%" y="132" width="0.1277%" height="15" fill="rgb(219,207,3)" fg:x="1849" fg:w="10"/><text x="23.8583%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:178) (14 samples, 0.18%)</title><rect x="23.6083%" y="116" width="0.1788%" height="15" fill="rgb(222,56,46)" fg:x="1849" fg:w="14"/><text x="23.8583%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionSubGraphs.py:131) (10 samples, 0.13%)</title><rect x="24.3361%" y="148" width="0.1277%" height="15" fill="rgb(239,76,54)" fg:x="1906" fg:w="10"/><text x="24.5861%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:131) (33 samples, 0.42%)</title><rect x="24.3105%" y="132" width="0.4213%" height="15" fill="rgb(231,124,27)" fg:x="1904" fg:w="33"/><text x="24.5605%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (21 samples, 0.27%)</title><rect x="24.4637%" y="148" width="0.2681%" height="15" fill="rgb(249,195,6)" fg:x="1916" fg:w="21"/><text x="24.7137%" y="158.50"></text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1243) (14 samples, 0.18%)</title><rect x="24.7319%" y="164" width="0.1788%" height="15" fill="rgb(237,174,47)" fg:x="1937" fg:w="14"/><text x="24.9819%" y="174.50"></text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1119) (36 samples, 0.46%)</title><rect x="25.5873%" y="228" width="0.4597%" height="15" fill="rgb(206,201,31)" fg:x="2004" fg:w="36"/><text x="25.8373%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:723) (179 samples, 2.29%)</title><rect x="24.9106%" y="196" width="2.2855%" height="15" fill="rgb(231,57,52)" fg:x="1951" fg:w="179"/><text x="25.1606%" y="206.50">a..</text></g><g><title>&lt;genexpr&gt; (networkx/classes/graph.py:1024) (173 samples, 2.21%)</title><rect x="24.9872%" y="212" width="2.2089%" height="15" fill="rgb(248,177,22)" fg:x="1957" fg:w="173"/><text x="25.2372%" y="222.50">&lt;..</text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1120) (90 samples, 1.15%)</title><rect x="26.0470%" y="228" width="1.1491%" height="15" fill="rgb(215,211,37)" fg:x="2040" fg:w="90"/><text x="26.2970%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:724) (8 samples, 0.10%)</title><rect x="27.1961%" y="196" width="0.1021%" height="15" fill="rgb(241,128,51)" fg:x="2130" fg:w="8"/><text x="27.4461%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:726) (17 samples, 0.22%)</title><rect x="27.3621%" y="196" width="0.2171%" height="15" fill="rgb(227,165,31)" fg:x="2143" fg:w="17"/><text x="27.6121%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:732) (36 samples, 0.46%)</title><rect x="27.5792%" y="196" width="0.4597%" height="15" fill="rgb(228,167,24)" fg:x="2160" fg:w="36"/><text x="27.8292%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:738) (432 samples, 5.52%)</title><rect x="28.0388%" y="196" width="5.5158%" height="15" fill="rgb(228,143,12)" fg:x="2196" fg:w="432"/><text x="28.2888%" y="206.50">add_edg..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:744) (203 samples, 2.59%)</title><rect x="33.5546%" y="196" width="2.5919%" height="15" fill="rgb(249,149,8)" fg:x="2628" fg:w="203"/><text x="33.8046%" y="206.50">ad..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:745) (26 samples, 0.33%)</title><rect x="36.1466%" y="196" width="0.3320%" height="15" fill="rgb(243,35,44)" fg:x="2831" fg:w="26"/><text x="36.3966%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:746) (104 samples, 1.33%)</title><rect x="36.4785%" y="196" width="1.3279%" height="15" fill="rgb(246,89,9)" fg:x="2857" fg:w="104"/><text x="36.7285%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:747) (52 samples, 0.66%)</title><rect x="37.8064%" y="196" width="0.6639%" height="15" fill="rgb(233,213,13)" fg:x="2961" fg:w="52"/><text x="38.0564%" y="206.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:51) (1,547 samples, 19.75%)</title><rect x="24.7319%" y="132" width="19.7523%" height="15" fill="rgb(233,141,41)" fg:x="1937" fg:w="1547"/><text x="24.9819%" y="142.50">fcn_metagraph_scc (exastolog/St..</text></g><g><title>from_scipy_sparse_matrix (networkx/convert_matrix.py:1103) (1,547 samples, 19.75%)</title><rect x="24.7319%" y="148" width="19.7523%" height="15" fill="rgb(239,167,4)" fg:x="1937" fg:w="1547"/><text x="24.9819%" y="158.50">from_scipy_sparse_matrix (netwo..</text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1271) (1,533 samples, 19.57%)</title><rect x="24.9106%" y="164" width="19.5735%" height="15" fill="rgb(209,217,16)" fg:x="1951" fg:w="1533"/><text x="25.1606%" y="174.50">from_scipy_sparse_array (networ..</text></g><g><title>add_weighted_edges_from (networkx/classes/graph.py:1024) (1,533 samples, 19.57%)</title><rect x="24.9106%" y="180" width="19.5735%" height="15" fill="rgb(219,88,35)" fg:x="1951" fg:w="1533"/><text x="25.1606%" y="190.50">add_weighted_edges_from (networ..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:748) (471 samples, 6.01%)</title><rect x="38.4704%" y="196" width="6.0138%" height="15" fill="rgb(220,193,23)" fg:x="3013" fg:w="471"/><text x="38.7204%" y="206.50">add_edge..</text></g><g><title>__contains__ (_collections_abc.py:825) (37 samples, 0.47%)</title><rect x="44.6502%" y="180" width="0.4724%" height="15" fill="rgb(230,90,52)" fg:x="3497" fg:w="37"/><text x="44.9002%" y="190.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:54) (34 samples, 0.43%)</title><rect x="44.6885%" y="196" width="0.4341%" height="15" fill="rgb(252,106,19)" fg:x="3500" fg:w="34"/><text x="44.9385%" y="206.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:809) (61 samples, 0.78%)</title><rect x="44.4842%" y="148" width="0.7789%" height="15" fill="rgb(206,74,20)" fg:x="3484" fg:w="61"/><text x="44.7342%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (networkx/classes/function.py:1253) (59 samples, 0.75%)</title><rect x="44.5097%" y="164" width="0.7533%" height="15" fill="rgb(230,138,44)" fg:x="3486" fg:w="59"/><text x="44.7597%" y="174.50"></text></g><g><title>__iter__ (_collections_abc.py:906) (11 samples, 0.14%)</title><rect x="45.1226%" y="180" width="0.1404%" height="15" fill="rgb(235,182,43)" fg:x="3534" fg:w="11"/><text x="45.3726%" y="190.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:82) (8 samples, 0.10%)</title><rect x="45.1609%" y="196" width="0.1021%" height="15" fill="rgb(242,16,51)" fg:x="3537" fg:w="8"/><text x="45.4109%" y="206.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:811) (56 samples, 0.72%)</title><rect x="45.3013%" y="148" width="0.7150%" height="15" fill="rgb(248,9,4)" fg:x="3548" fg:w="56"/><text x="45.5513%" y="158.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:812) (37 samples, 0.47%)</title><rect x="46.0163%" y="148" width="0.4724%" height="15" fill="rgb(210,31,22)" fg:x="3604" fg:w="37"/><text x="46.2663%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:52) (177 samples, 2.26%)</title><rect x="44.4842%" y="132" width="2.2600%" height="15" fill="rgb(239,54,39)" fg:x="3484" fg:w="177"/><text x="44.7342%" y="142.50">f..</text></g><g><title>remove_edges_from (networkx/classes/digraph.py:813) (20 samples, 0.26%)</title><rect x="46.4888%" y="148" width="0.2554%" height="15" fill="rgb(230,99,41)" fg:x="3641" fg:w="20"/><text x="46.7388%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:104) (15 samples, 0.19%)</title><rect x="46.9740%" y="148" width="0.1915%" height="15" fill="rgb(253,106,12)" fg:x="3679" fg:w="15"/><text x="47.2240%" y="158.50"></text></g><g><title>__getitem__ (networkx/classes/graph.py:517) (10 samples, 0.13%)</title><rect x="47.3825%" y="180" width="0.1277%" height="15" fill="rgb(213,46,41)" fg:x="3711" fg:w="10"/><text x="47.6325%" y="190.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:82) (8 samples, 0.10%)</title><rect x="47.4081%" y="196" width="0.1021%" height="15" fill="rgb(215,133,35)" fg:x="3713" fg:w="8"/><text x="47.6581%" y="206.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:78) (19 samples, 0.24%)</title><rect x="47.2932%" y="148" width="0.2426%" height="15" fill="rgb(213,28,5)" fg:x="3704" fg:w="19"/><text x="47.5432%" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (networkx/algorithms/components/strongly_connected.py:78) (19 samples, 0.24%)</title><rect x="47.2932%" y="164" width="0.2426%" height="15" fill="rgb(215,77,49)" fg:x="3704" fg:w="19"/><text x="47.5432%" y="174.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:80) (28 samples, 0.36%)</title><rect x="47.5741%" y="148" width="0.3575%" height="15" fill="rgb(248,100,22)" fg:x="3726" fg:w="28"/><text x="47.8241%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:88) (82 samples, 1.05%)</title><rect x="48.0848%" y="148" width="1.0470%" height="15" fill="rgb(208,67,9)" fg:x="3766" fg:w="82"/><text x="48.3348%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:89) (65 samples, 0.83%)</title><rect x="49.1318%" y="148" width="0.8299%" height="15" fill="rgb(219,133,21)" fg:x="3848" fg:w="65"/><text x="49.3818%" y="158.50"></text></g><g><title>__getitem__ (networkx/classes/graph.py:517) (34 samples, 0.43%)</title><rect x="50.2043%" y="164" width="0.4341%" height="15" fill="rgb(246,46,29)" fg:x="3932" fg:w="34"/><text x="50.4543%" y="174.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:82) (29 samples, 0.37%)</title><rect x="50.2681%" y="180" width="0.3703%" height="15" fill="rgb(246,185,52)" fg:x="3937" fg:w="29"/><text x="50.5181%" y="190.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:95) (100 samples, 1.28%)</title><rect x="49.9872%" y="148" width="1.2768%" height="15" fill="rgb(252,136,11)" fg:x="3915" fg:w="100"/><text x="50.2372%" y="158.50"></text></g><g><title>__iter__ (networkx/classes/coreviews.py:51) (49 samples, 0.63%)</title><rect x="50.6384%" y="164" width="0.6256%" height="15" fill="rgb(219,138,53)" fg:x="3966" fg:w="49"/><text x="50.8884%" y="174.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:96) (48 samples, 0.61%)</title><rect x="51.2640%" y="148" width="0.6129%" height="15" fill="rgb(211,51,23)" fg:x="4015" fg:w="48"/><text x="51.5140%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:56) (404 samples, 5.16%)</title><rect x="46.7441%" y="132" width="5.1583%" height="15" fill="rgb(247,221,28)" fg:x="3661" fg:w="404"/><text x="46.9941%" y="142.50">fcn_me..</text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:65) (63 samples, 0.80%)</title><rect x="51.9535%" y="132" width="0.8044%" height="15" fill="rgb(251,222,45)" fg:x="4069" fg:w="63"/><text x="52.2035%" y="142.50"></text></g><g><title>_sum_duplicates (scipy/sparse/_coo.py:536) (23 samples, 0.29%)</title><rect x="52.8856%" y="180" width="0.2937%" height="15" fill="rgb(217,162,53)" fg:x="4142" fg:w="23"/><text x="53.1356%" y="190.50"></text></g><g><title>lexsort (&lt;__array_function__ internals&gt;:180) (23 samples, 0.29%)</title><rect x="52.8856%" y="196" width="0.2937%" height="15" fill="rgb(229,93,14)" fg:x="4142" fg:w="23"/><text x="53.1356%" y="206.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:73) (32 samples, 0.41%)</title><rect x="52.8473%" y="132" width="0.4086%" height="15" fill="rgb(209,67,49)" fg:x="4139" fg:w="32"/><text x="53.0973%" y="142.50"></text></g><g><title>find (scipy/sparse/_extract.py:37) (29 samples, 0.37%)</title><rect x="52.8856%" y="148" width="0.3703%" height="15" fill="rgb(213,87,29)" fg:x="4142" fg:w="29"/><text x="53.1356%" y="158.50"></text></g><g><title>sum_duplicates (scipy/sparse/_coo.py:528) (29 samples, 0.37%)</title><rect x="52.8856%" y="164" width="0.3703%" height="15" fill="rgb(205,151,52)" fg:x="4142" fg:w="29"/><text x="53.1356%" y="174.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py:532) (9 samples, 0.11%)</title><rect x="53.5495%" y="180" width="0.1149%" height="15" fill="rgb(253,215,39)" fg:x="4194" fg:w="9"/><text x="53.7995%" y="190.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py:533) (8 samples, 0.10%)</title><rect x="53.6645%" y="180" width="0.1021%" height="15" fill="rgb(221,220,41)" fg:x="4203" fg:w="8"/><text x="53.9145%" y="190.50"></text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1243) (32 samples, 0.41%)</title><rect x="53.4091%" y="164" width="0.4086%" height="15" fill="rgb(218,133,21)" fg:x="4183" fg:w="32"/><text x="53.6591%" y="174.50"></text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1119) (35 samples, 0.45%)</title><rect x="54.6604%" y="228" width="0.4469%" height="15" fill="rgb(221,193,43)" fg:x="4281" fg:w="35"/><text x="54.9104%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:723) (176 samples, 2.25%)</title><rect x="53.8177%" y="196" width="2.2472%" height="15" fill="rgb(240,128,52)" fg:x="4215" fg:w="176"/><text x="54.0677%" y="206.50">a..</text></g><g><title>&lt;genexpr&gt; (networkx/classes/graph.py:1024) (164 samples, 2.09%)</title><rect x="53.9709%" y="212" width="2.0940%" height="15" fill="rgb(253,114,12)" fg:x="4227" fg:w="164"/><text x="54.2209%" y="222.50">&lt;..</text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1120) (75 samples, 0.96%)</title><rect x="55.1073%" y="228" width="0.9576%" height="15" fill="rgb(215,223,47)" fg:x="4316" fg:w="75"/><text x="55.3573%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:724) (17 samples, 0.22%)</title><rect x="56.0649%" y="196" width="0.2171%" height="15" fill="rgb(248,225,23)" fg:x="4391" fg:w="17"/><text x="56.3149%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:725) (8 samples, 0.10%)</title><rect x="56.2819%" y="196" width="0.1021%" height="15" fill="rgb(250,108,0)" fg:x="4408" fg:w="8"/><text x="56.5319%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:726) (17 samples, 0.22%)</title><rect x="56.3841%" y="196" width="0.2171%" height="15" fill="rgb(228,208,7)" fg:x="4416" fg:w="17"/><text x="56.6341%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:732) (20 samples, 0.26%)</title><rect x="56.6011%" y="196" width="0.2554%" height="15" fill="rgb(244,45,10)" fg:x="4433" fg:w="20"/><text x="56.8511%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:738) (396 samples, 5.06%)</title><rect x="56.8565%" y="196" width="5.0562%" height="15" fill="rgb(207,125,25)" fg:x="4453" fg:w="396"/><text x="57.1065%" y="206.50">add_ed..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:744) (220 samples, 2.81%)</title><rect x="61.9127%" y="196" width="2.8090%" height="15" fill="rgb(210,195,18)" fg:x="4849" fg:w="220"/><text x="62.1627%" y="206.50">ad..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:745) (21 samples, 0.27%)</title><rect x="64.7217%" y="196" width="0.2681%" height="15" fill="rgb(249,80,12)" fg:x="5069" fg:w="21"/><text x="64.9717%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:746) (70 samples, 0.89%)</title><rect x="64.9898%" y="196" width="0.8938%" height="15" fill="rgb(221,65,9)" fg:x="5090" fg:w="70"/><text x="65.2398%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:747) (37 samples, 0.47%)</title><rect x="65.8836%" y="196" width="0.4724%" height="15" fill="rgb(235,49,36)" fg:x="5160" fg:w="37"/><text x="66.1336%" y="206.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:86) (1,407 samples, 17.96%)</title><rect x="53.4091%" y="132" width="17.9648%" height="15" fill="rgb(225,32,20)" fg:x="4183" fg:w="1407"/><text x="53.6591%" y="142.50">fcn_metagraph_scc (exastolog..</text></g><g><title>from_scipy_sparse_matrix (networkx/convert_matrix.py:1103) (1,407 samples, 17.96%)</title><rect x="53.4091%" y="148" width="17.9648%" height="15" fill="rgb(215,141,46)" fg:x="4183" fg:w="1407"/><text x="53.6591%" y="158.50">from_scipy_sparse_matrix (ne..</text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1271) (1,375 samples, 17.56%)</title><rect x="53.8177%" y="164" width="17.5562%" height="15" fill="rgb(250,160,47)" fg:x="4215" fg:w="1375"/><text x="54.0677%" y="174.50">from_scipy_sparse_array (ne..</text></g><g><title>add_weighted_edges_from (networkx/classes/graph.py:1024) (1,375 samples, 17.56%)</title><rect x="53.8177%" y="180" width="17.5562%" height="15" fill="rgb(216,222,40)" fg:x="4215" fg:w="1375"/><text x="54.0677%" y="190.50">add_weighted_edges_from (ne..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:748) (393 samples, 5.02%)</title><rect x="66.3560%" y="196" width="5.0179%" height="15" fill="rgb(234,217,39)" fg:x="5197" fg:w="393"/><text x="66.6060%" y="206.50">add_ed..</text></g><g><title>topological_generations (networkx/algorithms/dag.py:204) (8 samples, 0.10%)</title><rect x="71.5781%" y="164" width="0.1021%" height="15" fill="rgb(207,178,40)" fg:x="5606" fg:w="8"/><text x="71.8281%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (networkx/algorithms/dag.py:204) (8 samples, 0.10%)</title><rect x="71.5781%" y="180" width="0.1021%" height="15" fill="rgb(221,136,13)" fg:x="5606" fg:w="8"/><text x="71.8281%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:206) (39 samples, 0.50%)</title><rect x="71.6803%" y="164" width="0.4980%" height="15" fill="rgb(249,199,10)" fg:x="5614" fg:w="39"/><text x="71.9303%" y="174.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:210) (51 samples, 0.65%)</title><rect x="72.2038%" y="164" width="0.6512%" height="15" fill="rgb(249,222,13)" fg:x="5655" fg:w="51"/><text x="72.4538%" y="174.50"></text></g><g><title>__contains__ (networkx/classes/graph.py:467) (44 samples, 0.56%)</title><rect x="72.2932%" y="180" width="0.5618%" height="15" fill="rgb(244,185,38)" fg:x="5662" fg:w="44"/><text x="72.5432%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:212) (58 samples, 0.74%)</title><rect x="72.8550%" y="164" width="0.7406%" height="15" fill="rgb(236,202,9)" fg:x="5706" fg:w="58"/><text x="73.1050%" y="174.50"></text></g><g><title>successors (networkx/classes/digraph.py:854) (45 samples, 0.57%)</title><rect x="73.0209%" y="180" width="0.5746%" height="15" fill="rgb(250,229,37)" fg:x="5719" fg:w="45"/><text x="73.2709%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:214) (691 samples, 8.82%)</title><rect x="73.5955%" y="164" width="8.8228%" height="15" fill="rgb(206,174,23)" fg:x="5764" fg:w="691"/><text x="73.8455%" y="174.50">topological_..</text></g><g><title>topological_generations (networkx/algorithms/dag.py:218) (312 samples, 3.98%)</title><rect x="82.4694%" y="164" width="3.9837%" height="15" fill="rgb(211,33,43)" fg:x="6459" fg:w="312"/><text x="82.7194%" y="174.50">topo..</text></g><g><title>topological_sort (networkx/algorithms/dag.py:292) (1,174 samples, 14.99%)</title><rect x="71.4888%" y="148" width="14.9898%" height="15" fill="rgb(245,58,50)" fg:x="5599" fg:w="1174"/><text x="71.7388%" y="158.50">topological_sort (netwo..</text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:192) (4,919 samples, 62.81%)</title><rect x="23.7870%" y="116" width="62.8064%" height="15" fill="rgb(244,68,36)" fg:x="1863" fg:w="4919"/><text x="24.0370%" y="126.50">fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:192)</text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:87) (1,192 samples, 15.22%)</title><rect x="71.3739%" y="132" width="15.2196%" height="15" fill="rgb(232,229,15)" fg:x="5590" fg:w="1192"/><text x="71.6239%" y="142.50">fcn_metagraph_scc (exas..</text></g><g><title>topological_sort (networkx/algorithms/dag.py:293) (9 samples, 0.11%)</title><rect x="86.4785%" y="148" width="0.1149%" height="15" fill="rgb(254,30,23)" fg:x="6773" fg:w="9"/><text x="86.7285%" y="158.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:197) (95 samples, 1.21%)</title><rect x="86.6062%" y="116" width="1.2130%" height="15" fill="rgb(235,160,14)" fg:x="6783" fg:w="95"/><text x="86.8562%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:198) (285 samples, 3.64%)</title><rect x="87.8192%" y="116" width="3.6389%" height="15" fill="rgb(212,155,44)" fg:x="6878" fg:w="285"/><text x="88.0692%" y="126.50">fcn_..</text></g><g><title>__init__ (exastolog/Simulation.py:42) (5,676 samples, 72.47%)</title><rect x="19.0245%" y="84" width="72.4719%" height="15" fill="rgb(226,2,50)" fg:x="1490" fg:w="5676"/><text x="19.2745%" y="94.50">__init__ (exastolog/Simulation.py:42)</text></g><g><title>__init__ (exastolog/StateTransitionSubGraphs.py:45) (5,676 samples, 72.47%)</title><rect x="19.0245%" y="100" width="72.4719%" height="15" fill="rgb(234,177,6)" fg:x="1490" fg:w="5676"/><text x="19.2745%" y="110.50">__init__ (exastolog/StateTransitionSubGraphs.py:45)</text></g><g><title>__init__ (scipy/sparse/_lil.py:110) (198 samples, 2.53%)</title><rect x="91.5475%" y="132" width="2.5281%" height="15" fill="rgb(217,24,9)" fg:x="7170" fg:w="198"/><text x="91.7975%" y="142.50">__..</text></g><g><title>split_calc_inverse (exastolog/Solution.py:172) (260 samples, 3.32%)</title><rect x="91.4964%" y="116" width="3.3197%" height="15" fill="rgb(220,13,46)" fg:x="7166" fg:w="260"/><text x="91.7464%" y="126.50">spl..</text></g><g><title>__init__ (scipy/sparse/_lil.py:111) (58 samples, 0.74%)</title><rect x="94.0756%" y="132" width="0.7406%" height="15" fill="rgb(239,221,27)" fg:x="7368" fg:w="58"/><text x="94.3256%" y="142.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:191) (8 samples, 0.10%)</title><rect x="94.8289%" y="116" width="0.1021%" height="15" fill="rgb(222,198,25)" fg:x="7427" fg:w="8"/><text x="95.0789%" y="126.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (8 samples, 0.10%)</title><rect x="94.8289%" y="132" width="0.1021%" height="15" fill="rgb(211,99,13)" fg:x="7427" fg:w="8"/><text x="95.0789%" y="142.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:196) (8 samples, 0.10%)</title><rect x="94.9311%" y="116" width="0.1021%" height="15" fill="rgb(232,111,31)" fg:x="7435" fg:w="8"/><text x="95.1811%" y="126.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:259) (17 samples, 0.22%)</title><rect x="95.0332%" y="116" width="0.2171%" height="15" fill="rgb(245,82,37)" fg:x="7443" fg:w="17"/><text x="95.2832%" y="126.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:78) (10 samples, 0.13%)</title><rect x="95.1226%" y="132" width="0.1277%" height="15" fill="rgb(227,149,46)" fg:x="7450" fg:w="10"/><text x="95.3726%" y="142.50"></text></g><g><title>_get_arrayXslice (scipy/sparse/_csr.py:330) (10 samples, 0.13%)</title><rect x="95.1226%" y="148" width="0.1277%" height="15" fill="rgb(218,36,50)" fg:x="7450" fg:w="10"/><text x="95.3726%" y="158.50"></text></g><g><title>_major_index_fancy (scipy/sparse/_compressed.py:708) (10 samples, 0.13%)</title><rect x="95.1226%" y="164" width="0.1277%" height="15" fill="rgb(226,80,48)" fg:x="7450" fg:w="10"/><text x="95.3726%" y="174.50"></text></g><g><title>__init__ (scipy/sparse/_lil.py:110) (52 samples, 0.66%)</title><rect x="95.3396%" y="148" width="0.6639%" height="15" fill="rgb(238,224,15)" fg:x="7467" fg:w="52"/><text x="95.5896%" y="158.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:59) (60 samples, 0.77%)</title><rect x="95.3396%" y="132" width="0.7661%" height="15" fill="rgb(241,136,10)" fg:x="7467" fg:w="60"/><text x="95.5896%" y="142.50"></text></g><g><title>__init__ (scipy/sparse/_lil.py:111) (8 samples, 0.10%)</title><rect x="96.0036%" y="148" width="0.1021%" height="15" fill="rgb(208,32,45)" fg:x="7519" fg:w="8"/><text x="96.2536%" y="158.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:63) (10 samples, 0.13%)</title><rect x="96.1185%" y="132" width="0.1277%" height="15" fill="rgb(207,135,9)" fg:x="7528" fg:w="10"/><text x="96.3685%" y="142.50"></text></g><g><title>spsolve (scipy/sparse/linalg/_dsolve/linsolve.py:282) (209 samples, 2.67%)</title><rect x="96.3739%" y="148" width="2.6685%" height="15" fill="rgb(206,86,44)" fg:x="7548" fg:w="209"/><text x="96.6239%" y="158.50">sp..</text></g><g><title>factorized (scipy/sparse/linalg/_dsolve/linsolve.py:563) (207 samples, 2.64%)</title><rect x="96.3994%" y="164" width="2.6430%" height="15" fill="rgb(245,177,15)" fg:x="7550" fg:w="207"/><text x="96.6494%" y="174.50">fa..</text></g><g><title>numeric (scikits/umfpack/umfpack.py:565) (204 samples, 2.60%)</title><rect x="96.4377%" y="180" width="2.6047%" height="15" fill="rgb(206,64,50)" fg:x="7553" fg:w="204"/><text x="96.6877%" y="190.50">nu..</text></g><g><title>umfpack_dl_numeric (scikits/umfpack/_umfpack.py:591) (204 samples, 2.60%)</title><rect x="96.4377%" y="196" width="2.6047%" height="15" fill="rgb(234,36,40)" fg:x="7553" fg:w="204"/><text x="96.6877%" y="206.50">um..</text></g><g><title>spsolve (scipy/sparse/linalg/_dsolve/linsolve.py:300) (21 samples, 0.27%)</title><rect x="99.0424%" y="148" width="0.2681%" height="15" fill="rgb(213,64,8)" fg:x="7757" fg:w="21"/><text x="99.2924%" y="158.50"></text></g><g><title>solve (scipy/sparse/linalg/_dsolve/linsolve.py:568) (21 samples, 0.27%)</title><rect x="99.0424%" y="164" width="0.2681%" height="15" fill="rgb(210,75,36)" fg:x="7757" fg:w="21"/><text x="99.2924%" y="174.50"></text></g><g><title>solve (scikits/umfpack/umfpack.py:709) (21 samples, 0.27%)</title><rect x="99.0424%" y="180" width="0.2681%" height="15" fill="rgb(229,88,21)" fg:x="7757" fg:w="21"/><text x="99.2924%" y="190.50"></text></g><g><title>umfpack_dl_solve (scikits/umfpack/_umfpack.py:415) (21 samples, 0.27%)</title><rect x="99.0424%" y="196" width="0.2681%" height="15" fill="rgb(252,204,47)" fg:x="7757" fg:w="21"/><text x="99.2924%" y="206.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:78) (232 samples, 2.96%)</title><rect x="96.3739%" y="132" width="2.9622%" height="15" fill="rgb(208,77,27)" fg:x="7548" fg:w="232"/><text x="96.6239%" y="142.50">fcn..</text></g><g><title>fcn_block_inversion (exastolog/Solution.py:79) (16 samples, 0.20%)</title><rect x="99.3361%" y="132" width="0.2043%" height="15" fill="rgb(221,76,26)" fg:x="7780" fg:w="16"/><text x="99.5861%" y="142.50"></text></g><g><title>__setitem__ (scipy/sparse/_lil.py:331) (13 samples, 0.17%)</title><rect x="99.5403%" y="148" width="0.1660%" height="15" fill="rgb(225,139,18)" fg:x="7796" fg:w="13"/><text x="99.7903%" y="158.50"></text></g><g><title>__setitem__ (scipy/sparse/_index.py:137) (12 samples, 0.15%)</title><rect x="99.5531%" y="164" width="0.1532%" height="15" fill="rgb(230,137,11)" fg:x="7797" fg:w="12"/><text x="99.8031%" y="174.50"></text></g><g><title>_set_arrayXarray_sparse (scipy/sparse/_lil.py:319) (12 samples, 0.15%)</title><rect x="99.5531%" y="180" width="0.1532%" height="15" fill="rgb(212,28,1)" fg:x="7797" fg:w="12"/><text x="99.8031%" y="190.50"></text></g><g><title>_set_arrayXarray (scipy/sparse/_lil.py:303) (12 samples, 0.15%)</title><rect x="99.5531%" y="196" width="0.1532%" height="15" fill="rgb(248,164,17)" fg:x="7797" fg:w="12"/><text x="99.8031%" y="206.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:84) (17 samples, 0.22%)</title><rect x="99.5403%" y="132" width="0.2171%" height="15" fill="rgb(222,171,42)" fg:x="7796" fg:w="17"/><text x="99.7903%" y="142.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:267) (353 samples, 4.51%)</title><rect x="95.3141%" y="116" width="4.5072%" height="15" fill="rgb(243,84,45)" fg:x="7465" fg:w="353"/><text x="95.5641%" y="126.50">split..</text></g><g><title>&lt;module&gt; (run.py:4) (6,501 samples, 83.01%)</title><rect x="16.8795%" y="68" width="83.0056%" height="15" fill="rgb(252,49,23)" fg:x="1322" fg:w="6501"/><text x="17.1295%" y="78.50">&lt;module&gt; (run.py:4)</text></g><g><title>__init__ (exastolog/Simulation.py:43) (657 samples, 8.39%)</title><rect x="91.4964%" y="84" width="8.3887%" height="15" fill="rgb(215,19,7)" fg:x="7166" fg:w="657"/><text x="91.7464%" y="94.50">__init__ (ex..</text></g><g><title>__init__ (exastolog/Solution.py:40) (657 samples, 8.39%)</title><rect x="91.4964%" y="100" width="8.3887%" height="15" fill="rgb(238,81,41)" fg:x="7166" fg:w="657"/><text x="91.7464%" y="110.50">__init__ (ex..</text></g><g><title>all (7,832 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(210,199,37)" fg:x="0" fg:w="7832"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (run.py:9) (9 samples, 0.11%)</title><rect x="99.8851%" y="68" width="0.1149%" height="15" fill="rgb(244,192,49)" fg:x="7823" fg:w="9"/><text x="100.1351%" y="78.50"></text></g></svg></svg>