<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1226" onload="init(evt)" viewBox="0 0 1200 1226" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1226" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python run.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1215.00"> </text><svg id="frames" x="10" width="1180" total_samples="8260"><g><title>&lt;module&gt; (numpy/__init__.py:141) (19 samples, 0.23%)</title><rect x="0.0000%" y="452" width="0.2300%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="19"/><text x="0.2500%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (19 samples, 0.23%)</title><rect x="0.0000%" y="468" width="0.2300%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="19"/><text x="0.2500%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (19 samples, 0.23%)</title><rect x="0.0000%" y="484" width="0.2300%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="19"/><text x="0.2500%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (19 samples, 0.23%)</title><rect x="0.0000%" y="500" width="0.2300%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="19"/><text x="0.2500%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (19 samples, 0.23%)</title><rect x="0.0000%" y="516" width="0.2300%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="19"/><text x="0.2500%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (19 samples, 0.23%)</title><rect x="0.0000%" y="532" width="0.2300%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="19"/><text x="0.2500%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (19 samples, 0.23%)</title><rect x="0.0000%" y="548" width="0.2300%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="19"/><text x="0.2500%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (19 samples, 0.23%)</title><rect x="0.0000%" y="564" width="0.2300%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="19"/><text x="0.2500%" y="574.50"></text></g><g><title>&lt;module&gt; (exastolog/Model.py:33) (27 samples, 0.33%)</title><rect x="0.0000%" y="260" width="0.3269%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="27"/><text x="0.2500%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (27 samples, 0.33%)</title><rect x="0.0000%" y="276" width="0.3269%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="27"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (27 samples, 0.33%)</title><rect x="0.0000%" y="292" width="0.3269%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="27"/><text x="0.2500%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (27 samples, 0.33%)</title><rect x="0.0000%" y="308" width="0.3269%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="27"/><text x="0.2500%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (27 samples, 0.33%)</title><rect x="0.0000%" y="324" width="0.3269%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="27"/><text x="0.2500%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (27 samples, 0.33%)</title><rect x="0.0000%" y="340" width="0.3269%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="27"/><text x="0.2500%" y="350.50"></text></g><g><title>&lt;module&gt; (exastolog/TransRateTable.py:32) (27 samples, 0.33%)</title><rect x="0.0000%" y="356" width="0.3269%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="27"/><text x="0.2500%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (27 samples, 0.33%)</title><rect x="0.0000%" y="372" width="0.3269%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="27"/><text x="0.2500%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (27 samples, 0.33%)</title><rect x="0.0000%" y="388" width="0.3269%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="27"/><text x="0.2500%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (27 samples, 0.33%)</title><rect x="0.0000%" y="404" width="0.3269%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="27"/><text x="0.2500%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (27 samples, 0.33%)</title><rect x="0.0000%" y="420" width="0.3269%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="27"/><text x="0.2500%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (27 samples, 0.33%)</title><rect x="0.0000%" y="436" width="0.3269%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="27"/><text x="0.2500%" y="446.50"></text></g><g><title>&lt;module&gt; (exastolog/__init__.py:1) (45 samples, 0.54%)</title><rect x="0.0000%" y="164" width="0.5448%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="45"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (45 samples, 0.54%)</title><rect x="0.0000%" y="180" width="0.5448%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="45"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (45 samples, 0.54%)</title><rect x="0.0000%" y="196" width="0.5448%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="45"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (45 samples, 0.54%)</title><rect x="0.0000%" y="212" width="0.5448%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="45"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (45 samples, 0.54%)</title><rect x="0.0000%" y="228" width="0.5448%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="45"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (45 samples, 0.54%)</title><rect x="0.0000%" y="244" width="0.5448%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="45"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (exastolog/Model.py:35) (18 samples, 0.22%)</title><rect x="0.3269%" y="260" width="0.2179%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="18"/><text x="0.5769%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.22%)</title><rect x="0.3269%" y="276" width="0.2179%" height="15" fill="rgb(238,160,17)" fg:x="27" fg:w="18"/><text x="0.5769%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.22%)</title><rect x="0.3269%" y="292" width="0.2179%" height="15" fill="rgb(214,148,48)" fg:x="27" fg:w="18"/><text x="0.5769%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.22%)</title><rect x="0.3269%" y="308" width="0.2179%" height="15" fill="rgb(232,36,49)" fg:x="27" fg:w="18"/><text x="0.5769%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.22%)</title><rect x="0.3269%" y="324" width="0.2179%" height="15" fill="rgb(209,103,24)" fg:x="27" fg:w="18"/><text x="0.5769%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.22%)</title><rect x="0.3269%" y="340" width="0.2179%" height="15" fill="rgb(229,88,8)" fg:x="27" fg:w="18"/><text x="0.5769%" y="350.50"></text></g><g><title>&lt;module&gt; (exastolog/StateTransitionGraph.py:32) (18 samples, 0.22%)</title><rect x="0.3269%" y="356" width="0.2179%" height="15" fill="rgb(213,181,19)" fg:x="27" fg:w="18"/><text x="0.5769%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.22%)</title><rect x="0.3269%" y="372" width="0.2179%" height="15" fill="rgb(254,191,54)" fg:x="27" fg:w="18"/><text x="0.5769%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.22%)</title><rect x="0.3269%" y="388" width="0.2179%" height="15" fill="rgb(241,83,37)" fg:x="27" fg:w="18"/><text x="0.5769%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.22%)</title><rect x="0.3269%" y="404" width="0.2179%" height="15" fill="rgb(233,36,39)" fg:x="27" fg:w="18"/><text x="0.5769%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.22%)</title><rect x="0.3269%" y="420" width="0.2179%" height="15" fill="rgb(226,3,54)" fg:x="27" fg:w="18"/><text x="0.5769%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.22%)</title><rect x="0.3269%" y="436" width="0.2179%" height="15" fill="rgb(245,192,40)" fg:x="27" fg:w="18"/><text x="0.5769%" y="446.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:283) (17 samples, 0.21%)</title><rect x="0.3390%" y="452" width="0.2058%" height="15" fill="rgb(238,167,29)" fg:x="28" fg:w="17"/><text x="0.5890%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (17 samples, 0.21%)</title><rect x="0.3390%" y="468" width="0.2058%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="17"/><text x="0.5890%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.21%)</title><rect x="0.3390%" y="484" width="0.2058%" height="15" fill="rgb(231,60,39)" fg:x="28" fg:w="17"/><text x="0.5890%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (17 samples, 0.21%)</title><rect x="0.3390%" y="500" width="0.2058%" height="15" fill="rgb(208,69,12)" fg:x="28" fg:w="17"/><text x="0.5890%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (17 samples, 0.21%)</title><rect x="0.3390%" y="516" width="0.2058%" height="15" fill="rgb(235,93,37)" fg:x="28" fg:w="17"/><text x="0.5890%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (17 samples, 0.21%)</title><rect x="0.3390%" y="532" width="0.2058%" height="15" fill="rgb(213,116,39)" fg:x="28" fg:w="17"/><text x="0.5890%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (17 samples, 0.21%)</title><rect x="0.3390%" y="548" width="0.2058%" height="15" fill="rgb(222,207,29)" fg:x="28" fg:w="17"/><text x="0.5890%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.21%)</title><rect x="0.3390%" y="564" width="0.2058%" height="15" fill="rgb(206,96,30)" fg:x="28" fg:w="17"/><text x="0.5890%" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py:185) (17 samples, 0.21%)</title><rect x="0.3390%" y="580" width="0.2058%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="17"/><text x="0.5890%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (17 samples, 0.21%)</title><rect x="0.3390%" y="596" width="0.2058%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="17"/><text x="0.5890%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (17 samples, 0.21%)</title><rect x="0.3390%" y="612" width="0.2058%" height="15" fill="rgb(239,60,40)" fg:x="28" fg:w="17"/><text x="0.5890%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (17 samples, 0.21%)</title><rect x="0.3390%" y="628" width="0.2058%" height="15" fill="rgb(206,27,48)" fg:x="28" fg:w="17"/><text x="0.5890%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (17 samples, 0.21%)</title><rect x="0.3390%" y="644" width="0.2058%" height="15" fill="rgb(225,35,8)" fg:x="28" fg:w="17"/><text x="0.5890%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.21%)</title><rect x="0.3390%" y="660" width="0.2058%" height="15" fill="rgb(250,213,24)" fg:x="28" fg:w="17"/><text x="0.5890%" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/_laplacian.py:7) (17 samples, 0.21%)</title><rect x="0.3390%" y="676" width="0.2058%" height="15" fill="rgb(247,123,22)" fg:x="28" fg:w="17"/><text x="0.5890%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (17 samples, 0.21%)</title><rect x="0.3390%" y="692" width="0.2058%" height="15" fill="rgb(231,138,38)" fg:x="28" fg:w="17"/><text x="0.5890%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (17 samples, 0.21%)</title><rect x="0.3390%" y="708" width="0.2058%" height="15" fill="rgb(231,145,46)" fg:x="28" fg:w="17"/><text x="0.5890%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (17 samples, 0.21%)</title><rect x="0.3390%" y="724" width="0.2058%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="17"/><text x="0.5890%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (17 samples, 0.21%)</title><rect x="0.3390%" y="740" width="0.2058%" height="15" fill="rgb(217,147,25)" fg:x="28" fg:w="17"/><text x="0.5890%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.21%)</title><rect x="0.3390%" y="756" width="0.2058%" height="15" fill="rgb(247,81,37)" fg:x="28" fg:w="17"/><text x="0.5890%" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:121) (10 samples, 0.12%)</title><rect x="0.4237%" y="772" width="0.1211%" height="15" fill="rgb(209,12,38)" fg:x="35" fg:w="10"/><text x="0.6737%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (10 samples, 0.12%)</title><rect x="0.4237%" y="788" width="0.1211%" height="15" fill="rgb(227,1,9)" fg:x="35" fg:w="10"/><text x="0.6737%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (10 samples, 0.12%)</title><rect x="0.4237%" y="804" width="0.1211%" height="15" fill="rgb(248,47,43)" fg:x="35" fg:w="10"/><text x="0.6737%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (10 samples, 0.12%)</title><rect x="0.4237%" y="820" width="0.1211%" height="15" fill="rgb(221,10,30)" fg:x="35" fg:w="10"/><text x="0.6737%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (10 samples, 0.12%)</title><rect x="0.4237%" y="836" width="0.1211%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="10"/><text x="0.6737%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.12%)</title><rect x="0.4237%" y="852" width="0.1211%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="10"/><text x="0.6737%" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_dsolve/__init__.py:58) (10 samples, 0.12%)</title><rect x="0.4237%" y="868" width="0.1211%" height="15" fill="rgb(234,67,33)" fg:x="35" fg:w="10"/><text x="0.6737%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (10 samples, 0.12%)</title><rect x="0.4237%" y="884" width="0.1211%" height="15" fill="rgb(247,98,35)" fg:x="35" fg:w="10"/><text x="0.6737%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (10 samples, 0.12%)</title><rect x="0.4237%" y="900" width="0.1211%" height="15" fill="rgb(247,138,52)" fg:x="35" fg:w="10"/><text x="0.6737%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (10 samples, 0.12%)</title><rect x="0.4237%" y="916" width="0.1211%" height="15" fill="rgb(213,79,30)" fg:x="35" fg:w="10"/><text x="0.6737%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (10 samples, 0.12%)</title><rect x="0.4237%" y="932" width="0.1211%" height="15" fill="rgb(246,177,23)" fg:x="35" fg:w="10"/><text x="0.6737%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.12%)</title><rect x="0.4237%" y="948" width="0.1211%" height="15" fill="rgb(230,62,27)" fg:x="35" fg:w="10"/><text x="0.6737%" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_dsolve/linsolve.py:15) (10 samples, 0.12%)</title><rect x="0.4237%" y="964" width="0.1211%" height="15" fill="rgb(216,154,8)" fg:x="35" fg:w="10"/><text x="0.6737%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (10 samples, 0.12%)</title><rect x="0.4237%" y="980" width="0.1211%" height="15" fill="rgb(244,35,45)" fg:x="35" fg:w="10"/><text x="0.6737%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (10 samples, 0.12%)</title><rect x="0.4237%" y="996" width="0.1211%" height="15" fill="rgb(251,115,12)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.12%)</title><rect x="0.4237%" y="1012" width="0.1211%" height="15" fill="rgb(240,54,50)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (10 samples, 0.12%)</title><rect x="0.4237%" y="1028" width="0.1211%" height="15" fill="rgb(233,84,52)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (10 samples, 0.12%)</title><rect x="0.4237%" y="1044" width="0.1211%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (10 samples, 0.12%)</title><rect x="0.4237%" y="1060" width="0.1211%" height="15" fill="rgb(249,43,39)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (10 samples, 0.12%)</title><rect x="0.4237%" y="1076" width="0.1211%" height="15" fill="rgb(209,38,44)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.12%)</title><rect x="0.4237%" y="1092" width="0.1211%" height="15" fill="rgb(236,212,23)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1102.50"></text></g><g><title>&lt;module&gt; (scikits/__init__.py:1) (10 samples, 0.12%)</title><rect x="0.4237%" y="1108" width="0.1211%" height="15" fill="rgb(242,79,21)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (10 samples, 0.12%)</title><rect x="0.4237%" y="1124" width="0.1211%" height="15" fill="rgb(211,96,35)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (10 samples, 0.12%)</title><rect x="0.4237%" y="1140" width="0.1211%" height="15" fill="rgb(253,215,40)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (10 samples, 0.12%)</title><rect x="0.4237%" y="1156" width="0.1211%" height="15" fill="rgb(211,81,21)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (10 samples, 0.12%)</title><rect x="0.4237%" y="1172" width="0.1211%" height="15" fill="rgb(208,190,38)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.12%)</title><rect x="0.4237%" y="1188" width="0.1211%" height="15" fill="rgb(235,213,38)" fg:x="35" fg:w="10"/><text x="0.6737%" y="1198.50"></text></g><g><title>&lt;module&gt; (exastolog/Simulation.py:32) (12 samples, 0.15%)</title><rect x="0.5448%" y="260" width="0.1453%" height="15" fill="rgb(237,122,38)" fg:x="45" fg:w="12"/><text x="0.7948%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.15%)</title><rect x="0.5448%" y="276" width="0.1453%" height="15" fill="rgb(244,218,35)" fg:x="45" fg:w="12"/><text x="0.7948%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.15%)</title><rect x="0.5448%" y="292" width="0.1453%" height="15" fill="rgb(240,68,47)" fg:x="45" fg:w="12"/><text x="0.7948%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.15%)</title><rect x="0.5448%" y="308" width="0.1453%" height="15" fill="rgb(210,16,53)" fg:x="45" fg:w="12"/><text x="0.7948%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.15%)</title><rect x="0.5448%" y="324" width="0.1453%" height="15" fill="rgb(235,124,12)" fg:x="45" fg:w="12"/><text x="0.7948%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.15%)</title><rect x="0.5448%" y="340" width="0.1453%" height="15" fill="rgb(224,169,11)" fg:x="45" fg:w="12"/><text x="0.7948%" y="350.50"></text></g><g><title>&lt;module&gt; (exastolog/StateTransitionSubGraphs.py:31) (12 samples, 0.15%)</title><rect x="0.5448%" y="356" width="0.1453%" height="15" fill="rgb(250,166,2)" fg:x="45" fg:w="12"/><text x="0.7948%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.15%)</title><rect x="0.5448%" y="372" width="0.1453%" height="15" fill="rgb(242,216,29)" fg:x="45" fg:w="12"/><text x="0.7948%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.15%)</title><rect x="0.5448%" y="388" width="0.1453%" height="15" fill="rgb(230,116,27)" fg:x="45" fg:w="12"/><text x="0.7948%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.15%)</title><rect x="0.5448%" y="404" width="0.1453%" height="15" fill="rgb(228,99,48)" fg:x="45" fg:w="12"/><text x="0.7948%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.15%)</title><rect x="0.5448%" y="420" width="0.1453%" height="15" fill="rgb(253,11,6)" fg:x="45" fg:w="12"/><text x="0.7948%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.15%)</title><rect x="0.5448%" y="436" width="0.1453%" height="15" fill="rgb(247,143,39)" fg:x="45" fg:w="12"/><text x="0.7948%" y="446.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:81) (9 samples, 0.11%)</title><rect x="0.5811%" y="452" width="0.1090%" height="15" fill="rgb(236,97,10)" fg:x="48" fg:w="9"/><text x="0.8311%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (9 samples, 0.11%)</title><rect x="0.5811%" y="468" width="0.1090%" height="15" fill="rgb(233,208,19)" fg:x="48" fg:w="9"/><text x="0.8311%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.11%)</title><rect x="0.5811%" y="484" width="0.1090%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="9"/><text x="0.8311%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 0.11%)</title><rect x="0.5811%" y="500" width="0.1090%" height="15" fill="rgb(220,129,5)" fg:x="48" fg:w="9"/><text x="0.8311%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 0.11%)</title><rect x="0.5811%" y="516" width="0.1090%" height="15" fill="rgb(242,17,10)" fg:x="48" fg:w="9"/><text x="0.8311%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 0.11%)</title><rect x="0.5811%" y="532" width="0.1090%" height="15" fill="rgb(242,107,0)" fg:x="48" fg:w="9"/><text x="0.8311%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 0.11%)</title><rect x="0.5811%" y="548" width="0.1090%" height="15" fill="rgb(251,28,31)" fg:x="48" fg:w="9"/><text x="0.8311%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.11%)</title><rect x="0.5811%" y="564" width="0.1090%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="9"/><text x="0.8311%" y="574.50"></text></g><g><title>&lt;module&gt; (run.py:1) (68 samples, 0.82%)</title><rect x="0.0000%" y="68" width="0.8232%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="68"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (68 samples, 0.82%)</title><rect x="0.0000%" y="84" width="0.8232%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="68"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (68 samples, 0.82%)</title><rect x="0.0000%" y="100" width="0.8232%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="68"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (68 samples, 0.82%)</title><rect x="0.0000%" y="116" width="0.8232%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="68"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (68 samples, 0.82%)</title><rect x="0.0000%" y="132" width="0.8232%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="68"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (68 samples, 0.82%)</title><rect x="0.0000%" y="148" width="0.8232%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="68"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (exastolog/__init__.py:2) (23 samples, 0.28%)</title><rect x="0.5448%" y="164" width="0.2785%" height="15" fill="rgb(240,187,13)" fg:x="45" fg:w="23"/><text x="0.7948%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (23 samples, 0.28%)</title><rect x="0.5448%" y="180" width="0.2785%" height="15" fill="rgb(223,113,26)" fg:x="45" fg:w="23"/><text x="0.7948%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (23 samples, 0.28%)</title><rect x="0.5448%" y="196" width="0.2785%" height="15" fill="rgb(206,192,2)" fg:x="45" fg:w="23"/><text x="0.7948%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (23 samples, 0.28%)</title><rect x="0.5448%" y="212" width="0.2785%" height="15" fill="rgb(241,108,4)" fg:x="45" fg:w="23"/><text x="0.7948%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (23 samples, 0.28%)</title><rect x="0.5448%" y="228" width="0.2785%" height="15" fill="rgb(247,173,49)" fg:x="45" fg:w="23"/><text x="0.7948%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (23 samples, 0.28%)</title><rect x="0.5448%" y="244" width="0.2785%" height="15" fill="rgb(224,114,35)" fg:x="45" fg:w="23"/><text x="0.7948%" y="254.50"></text></g><g><title>&lt;module&gt; (exastolog/Simulation.py:35) (11 samples, 0.13%)</title><rect x="0.6901%" y="260" width="0.1332%" height="15" fill="rgb(245,159,27)" fg:x="57" fg:w="11"/><text x="0.9401%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.13%)</title><rect x="0.6901%" y="276" width="0.1332%" height="15" fill="rgb(245,172,44)" fg:x="57" fg:w="11"/><text x="0.9401%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.13%)</title><rect x="0.6901%" y="292" width="0.1332%" height="15" fill="rgb(236,23,11)" fg:x="57" fg:w="11"/><text x="0.9401%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.13%)</title><rect x="0.6901%" y="308" width="0.1332%" height="15" fill="rgb(205,117,38)" fg:x="57" fg:w="11"/><text x="0.9401%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.13%)</title><rect x="0.6901%" y="324" width="0.1332%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="11"/><text x="0.9401%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.13%)</title><rect x="0.6901%" y="340" width="0.1332%" height="15" fill="rgb(244,70,9)" fg:x="57" fg:w="11"/><text x="0.9401%" y="350.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:103) (9 samples, 0.11%)</title><rect x="0.8232%" y="132" width="0.1090%" height="15" fill="rgb(217,125,39)" fg:x="68" fg:w="9"/><text x="1.0732%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:109) (24 samples, 0.29%)</title><rect x="0.9806%" y="148" width="0.2906%" height="15" fill="rgb(235,36,10)" fg:x="81" fg:w="24"/><text x="1.2306%" y="158.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (24 samples, 0.29%)</title><rect x="0.9806%" y="164" width="0.2906%" height="15" fill="rgb(251,123,47)" fg:x="81" fg:w="24"/><text x="1.2306%" y="174.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:108) (32 samples, 0.39%)</title><rect x="0.9806%" y="132" width="0.3874%" height="15" fill="rgb(221,13,13)" fg:x="81" fg:w="32"/><text x="1.2306%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:133) (12 samples, 0.15%)</title><rect x="1.4528%" y="132" width="0.1453%" height="15" fill="rgb(238,131,9)" fg:x="120" fg:w="12"/><text x="1.7028%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (12 samples, 0.15%)</title><rect x="1.4528%" y="148" width="0.1453%" height="15" fill="rgb(211,50,8)" fg:x="120" fg:w="12"/><text x="1.7028%" y="158.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:134) (9 samples, 0.11%)</title><rect x="1.5981%" y="132" width="0.1090%" height="15" fill="rgb(245,182,24)" fg:x="132" fg:w="9"/><text x="1.8481%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (9 samples, 0.11%)</title><rect x="1.5981%" y="148" width="0.1090%" height="15" fill="rgb(242,14,37)" fg:x="132" fg:w="9"/><text x="1.8481%" y="158.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:138) (23 samples, 0.28%)</title><rect x="1.7554%" y="132" width="0.2785%" height="15" fill="rgb(246,228,12)" fg:x="145" fg:w="23"/><text x="2.0054%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (17 samples, 0.21%)</title><rect x="1.8281%" y="148" width="0.2058%" height="15" fill="rgb(213,55,15)" fg:x="151" fg:w="17"/><text x="2.0781%" y="158.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:87) (48 samples, 0.58%)</title><rect x="2.0339%" y="132" width="0.5811%" height="15" fill="rgb(209,9,3)" fg:x="168" fg:w="48"/><text x="2.2839%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:88) (11 samples, 0.13%)</title><rect x="2.6150%" y="132" width="0.1332%" height="15" fill="rgb(230,59,30)" fg:x="216" fg:w="11"/><text x="2.8650%" y="142.50"></text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:96) (10 samples, 0.12%)</title><rect x="2.9298%" y="132" width="0.1211%" height="15" fill="rgb(209,121,21)" fg:x="242" fg:w="10"/><text x="3.1798%" y="142.50"></text></g><g><title>fcn_build_update_table (exastolog/StateTransitionTable.py:77) (10 samples, 0.12%)</title><rect x="2.9298%" y="148" width="0.1211%" height="15" fill="rgb(220,109,13)" fg:x="242" fg:w="10"/><text x="3.1798%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:78) (10 samples, 0.12%)</title><rect x="2.9298%" y="164" width="0.1211%" height="15" fill="rgb(232,18,1)" fg:x="242" fg:w="10"/><text x="3.1798%" y="174.50"></text></g><g><title>__init__ (exastolog/Model.py:49) (194 samples, 2.35%)</title><rect x="0.8232%" y="84" width="2.3487%" height="15" fill="rgb(215,41,42)" fg:x="68" fg:w="194"/><text x="1.0732%" y="94.50">_..</text></g><g><title>buildStateTransitionTable (exastolog/Model.py:65) (194 samples, 2.35%)</title><rect x="0.8232%" y="100" width="2.3487%" height="15" fill="rgb(224,123,36)" fg:x="68" fg:w="194"/><text x="1.0732%" y="110.50">b..</text></g><g><title>__init__ (exastolog/StateTransitionTable.py:43) (194 samples, 2.35%)</title><rect x="0.8232%" y="116" width="2.3487%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="194"/><text x="1.0732%" y="126.50">_..</text></g><g><title>fcn_build_stg_table (exastolog/StateTransitionTable.py:99) (10 samples, 0.12%)</title><rect x="3.0508%" y="132" width="0.1211%" height="15" fill="rgb(205,98,50)" fg:x="252" fg:w="10"/><text x="3.3008%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionTable.py:100) (10 samples, 0.12%)</title><rect x="3.0508%" y="148" width="0.1211%" height="15" fill="rgb(205,185,37)" fg:x="252" fg:w="10"/><text x="3.3008%" y="158.50"></text></g><g><title>nonzero (&lt;__array_function__ internals&gt;:180) (10 samples, 0.12%)</title><rect x="3.0508%" y="164" width="0.1211%" height="15" fill="rgb(238,207,15)" fg:x="252" fg:w="10"/><text x="3.3008%" y="174.50"></text></g><g><title>nonzero (numpy/core/fromnumeric.py:1958) (10 samples, 0.12%)</title><rect x="3.0508%" y="180" width="0.1211%" height="15" fill="rgb(213,199,42)" fg:x="252" fg:w="10"/><text x="3.3008%" y="190.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (10 samples, 0.12%)</title><rect x="3.0508%" y="196" width="0.1211%" height="15" fill="rgb(235,201,11)" fg:x="252" fg:w="10"/><text x="3.3008%" y="206.50"></text></g><g><title>tocsr (scipy/sparse/_coo.py:405) (43 samples, 0.52%)</title><rect x="3.2567%" y="196" width="0.5206%" height="15" fill="rgb(207,46,11)" fg:x="269" fg:w="43"/><text x="3.5067%" y="206.50"></text></g><g><title>sum_duplicates (scipy/sparse/_compressed.py:1118) (22 samples, 0.27%)</title><rect x="3.7772%" y="212" width="0.2663%" height="15" fill="rgb(241,35,35)" fg:x="312" fg:w="22"/><text x="4.0272%" y="222.50"></text></g><g><title>sort_indices (scipy/sparse/_compressed.py:1164) (22 samples, 0.27%)</title><rect x="3.7772%" y="228" width="0.2663%" height="15" fill="rgb(243,32,47)" fg:x="312" fg:w="22"/><text x="4.0272%" y="238.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:52) (70 samples, 0.85%)</title><rect x="3.2567%" y="148" width="0.8475%" height="15" fill="rgb(247,202,23)" fg:x="269" fg:w="70"/><text x="3.5067%" y="158.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:33) (70 samples, 0.85%)</title><rect x="3.2567%" y="164" width="0.8475%" height="15" fill="rgb(219,102,11)" fg:x="269" fg:w="70"/><text x="3.5067%" y="174.50"></text></g><g><title>asformat (scipy/sparse/_base.py:377) (70 samples, 0.85%)</title><rect x="3.2567%" y="180" width="0.8475%" height="15" fill="rgb(243,110,44)" fg:x="269" fg:w="70"/><text x="3.5067%" y="190.50"></text></g><g><title>tocsr (scipy/sparse/_coo.py:410) (27 samples, 0.33%)</title><rect x="3.7772%" y="196" width="0.3269%" height="15" fill="rgb(222,74,54)" fg:x="312" fg:w="27"/><text x="4.0272%" y="206.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:50) (81 samples, 0.98%)</title><rect x="3.2567%" y="132" width="0.9806%" height="15" fill="rgb(216,99,12)" fg:x="269" fg:w="81"/><text x="3.5067%" y="142.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:53) (11 samples, 0.13%)</title><rect x="4.1041%" y="148" width="0.1332%" height="15" fill="rgb(226,22,26)" fg:x="339" fg:w="11"/><text x="4.3541%" y="158.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:59) (22 samples, 0.27%)</title><rect x="4.2978%" y="132" width="0.2663%" height="15" fill="rgb(217,163,10)" fg:x="355" fg:w="22"/><text x="4.5478%" y="142.50"></text></g><g><title>&lt;module&gt; (run.py:3) (319 samples, 3.86%)</title><rect x="0.8232%" y="68" width="3.8620%" height="15" fill="rgb(213,25,53)" fg:x="68" fg:w="319"/><text x="1.0732%" y="78.50">&lt;mod..</text></g><g><title>__init__ (exastolog/Model.py:51) (125 samples, 1.51%)</title><rect x="3.1719%" y="84" width="1.5133%" height="15" fill="rgb(252,105,26)" fg:x="262" fg:w="125"/><text x="3.4219%" y="94.50"></text></g><g><title>buildStateTransitionGraph (exastolog/Model.py:73) (125 samples, 1.51%)</title><rect x="3.1719%" y="100" width="1.5133%" height="15" fill="rgb(220,39,43)" fg:x="262" fg:w="125"/><text x="3.4219%" y="110.50"></text></g><g><title>__init__ (exastolog/StateTransitionGraph.py:39) (125 samples, 1.51%)</title><rect x="3.1719%" y="116" width="1.5133%" height="15" fill="rgb(229,68,48)" fg:x="262" fg:w="125"/><text x="3.4219%" y="126.50"></text></g><g><title>fcn_build_trans_matr (exastolog/StateTransitionGraph.py:62) (10 samples, 0.12%)</title><rect x="4.5642%" y="132" width="0.1211%" height="15" fill="rgb(252,8,32)" fg:x="377" fg:w="10"/><text x="4.8142%" y="142.50"></text></g><g><title>__sub__ (scipy/sparse/_base.py:491) (9 samples, 0.11%)</title><rect x="4.5763%" y="148" width="0.1090%" height="15" fill="rgb(223,20,43)" fg:x="378" fg:w="9"/><text x="4.8263%" y="158.50"></text></g><g><title>_sub_sparse (scipy/sparse/_compressed.py:363) (9 samples, 0.11%)</title><rect x="4.5763%" y="164" width="0.1090%" height="15" fill="rgb(229,81,49)" fg:x="378" fg:w="9"/><text x="4.8263%" y="174.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:46) (49 samples, 0.59%)</title><rect x="4.6852%" y="116" width="0.5932%" height="15" fill="rgb(236,28,36)" fg:x="387" fg:w="49"/><text x="4.9352%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:49) (11 samples, 0.13%)</title><rect x="5.3632%" y="116" width="0.1332%" height="15" fill="rgb(249,185,26)" fg:x="443" fg:w="11"/><text x="5.6132%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:82) (18 samples, 0.22%)</title><rect x="5.6295%" y="116" width="0.2179%" height="15" fill="rgb(249,174,33)" fg:x="465" fg:w="18"/><text x="5.8795%" y="126.50"></text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:83) (24 samples, 0.29%)</title><rect x="5.8475%" y="116" width="0.2906%" height="15" fill="rgb(233,201,37)" fg:x="483" fg:w="24"/><text x="6.0975%" y="126.50"></text></g><g><title>__init__ (exastolog/Simulation.py:41) (215 samples, 2.60%)</title><rect x="4.6852%" y="84" width="2.6029%" height="15" fill="rgb(221,78,26)" fg:x="387" fg:w="215"/><text x="4.9352%" y="94.50">__..</text></g><g><title>__init__ (exastolog/InitialState.py:38) (215 samples, 2.60%)</title><rect x="4.6852%" y="100" width="2.6029%" height="15" fill="rgb(250,127,30)" fg:x="387" fg:w="215"/><text x="4.9352%" y="110.50">__..</text></g><g><title>fcn_define_initial_states (exastolog/InitialState.py:98) (95 samples, 1.15%)</title><rect x="6.1380%" y="116" width="1.1501%" height="15" fill="rgb(230,49,44)" fg:x="507" fg:w="95"/><text x="6.3880%" y="126.50"></text></g><g><title>tocsc (scipy/sparse/_csr.py:179) (17 samples, 0.21%)</title><rect x="7.3245%" y="164" width="0.2058%" height="15" fill="rgb(229,67,23)" fg:x="605" fg:w="17"/><text x="7.5745%" y="174.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:140) (18 samples, 0.22%)</title><rect x="7.3245%" y="116" width="0.2179%" height="15" fill="rgb(249,83,47)" fg:x="605" fg:w="18"/><text x="7.5745%" y="126.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:33) (18 samples, 0.22%)</title><rect x="7.3245%" y="132" width="0.2179%" height="15" fill="rgb(215,43,3)" fg:x="605" fg:w="18"/><text x="7.5745%" y="142.50"></text></g><g><title>asformat (scipy/sparse/_base.py:377) (18 samples, 0.22%)</title><rect x="7.3245%" y="148" width="0.2179%" height="15" fill="rgb(238,154,13)" fg:x="605" fg:w="18"/><text x="7.5745%" y="158.50"></text></g><g><title>tocsr (scipy/sparse/_csc.py:140) (12 samples, 0.15%)</title><rect x="8.0508%" y="132" width="0.1453%" height="15" fill="rgb(219,56,2)" fg:x="665" fg:w="12"/><text x="8.3008%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:142) (51 samples, 0.62%)</title><rect x="7.6150%" y="116" width="0.6174%" height="15" fill="rgb(233,0,4)" fg:x="629" fg:w="51"/><text x="7.8650%" y="126.50"></text></g><g><title>_validate_indices (scipy/sparse/_index.py:159) (10 samples, 0.12%)</title><rect x="8.4504%" y="148" width="0.1211%" height="15" fill="rgb(235,30,7)" fg:x="698" fg:w="10"/><text x="8.7004%" y="158.50"></text></g><g><title>_asindices (scipy/sparse/_index.py:178) (10 samples, 0.12%)</title><rect x="8.4504%" y="164" width="0.1211%" height="15" fill="rgb(250,79,13)" fg:x="698" fg:w="10"/><text x="8.7004%" y="174.50"></text></g><g><title>_validate_indices (scipy/sparse/_index.py:161) (15 samples, 0.18%)</title><rect x="8.5714%" y="148" width="0.1816%" height="15" fill="rgb(211,146,34)" fg:x="708" fg:w="15"/><text x="8.8214%" y="158.50"></text></g><g><title>isintlike (scipy/sparse/_sputils.py:222) (15 samples, 0.18%)</title><rect x="8.5714%" y="164" width="0.1816%" height="15" fill="rgb(228,22,38)" fg:x="708" fg:w="15"/><text x="8.8214%" y="174.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:180) (15 samples, 0.18%)</title><rect x="8.5714%" y="180" width="0.1816%" height="15" fill="rgb(235,168,5)" fg:x="708" fg:w="15"/><text x="8.8214%" y="190.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3156) (15 samples, 0.18%)</title><rect x="8.5714%" y="196" width="0.1816%" height="15" fill="rgb(221,155,16)" fg:x="708" fg:w="15"/><text x="8.8214%" y="206.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (37 samples, 0.45%)</title><rect x="8.3898%" y="132" width="0.4479%" height="15" fill="rgb(215,215,53)" fg:x="693" fg:w="37"/><text x="8.6398%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:159) (49 samples, 0.59%)</title><rect x="8.3898%" y="116" width="0.5932%" height="15" fill="rgb(223,4,10)" fg:x="693" fg:w="49"/><text x="8.6398%" y="126.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:71) (12 samples, 0.15%)</title><rect x="8.8378%" y="132" width="0.1453%" height="15" fill="rgb(234,103,6)" fg:x="730" fg:w="12"/><text x="9.0878%" y="142.50"></text></g><g><title>_get_sliceXarray (scipy/sparse/_csr.py:321) (12 samples, 0.15%)</title><rect x="8.8378%" y="148" width="0.1453%" height="15" fill="rgb(227,97,0)" fg:x="730" fg:w="12"/><text x="9.0878%" y="158.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:160) (9 samples, 0.11%)</title><rect x="8.9831%" y="116" width="0.1090%" height="15" fill="rgb(234,150,53)" fg:x="742" fg:w="9"/><text x="9.2331%" y="126.50"></text></g><g><title>setdiag (scipy/sparse/_base.py:1258) (9 samples, 0.11%)</title><rect x="8.9831%" y="132" width="0.1090%" height="15" fill="rgb(228,201,54)" fg:x="742" fg:w="9"/><text x="9.2331%" y="142.50"></text></g><g><title>_setdiag (scipy/sparse/_compressed.py:878) (9 samples, 0.11%)</title><rect x="8.9831%" y="148" width="0.1090%" height="15" fill="rgb(222,22,37)" fg:x="742" fg:w="9"/><text x="9.2331%" y="158.50"></text></g><g><title>__setitem__ (scipy/sparse/_index.py:146) (9 samples, 0.11%)</title><rect x="8.9831%" y="164" width="0.1090%" height="15" fill="rgb(237,53,32)" fg:x="742" fg:w="9"/><text x="9.2331%" y="174.50"></text></g><g><title>_set_arrayXarray (scipy/sparse/_compressed.py:823) (9 samples, 0.11%)</title><rect x="8.9831%" y="180" width="0.1090%" height="15" fill="rgb(233,25,53)" fg:x="742" fg:w="9"/><text x="9.2331%" y="190.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:163) (76 samples, 0.92%)</title><rect x="9.1525%" y="116" width="0.9201%" height="15" fill="rgb(210,40,34)" fg:x="756" fg:w="76"/><text x="9.4025%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionSubGraphs.py:163) (76 samples, 0.92%)</title><rect x="9.1525%" y="132" width="0.9201%" height="15" fill="rgb(241,220,44)" fg:x="756" fg:w="76"/><text x="9.4025%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:164) (18 samples, 0.22%)</title><rect x="10.0726%" y="116" width="0.2179%" height="15" fill="rgb(235,28,35)" fg:x="832" fg:w="18"/><text x="10.3226%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:169) (85 samples, 1.03%)</title><rect x="10.3753%" y="116" width="1.0291%" height="15" fill="rgb(210,56,17)" fg:x="857" fg:w="85"/><text x="10.6253%" y="126.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (14 samples, 0.17%)</title><rect x="11.4044%" y="132" width="0.1695%" height="15" fill="rgb(224,130,29)" fg:x="942" fg:w="14"/><text x="11.6544%" y="142.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:178) (16 samples, 0.19%)</title><rect x="11.4044%" y="116" width="0.1937%" height="15" fill="rgb(235,212,8)" fg:x="942" fg:w="16"/><text x="11.6544%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (exastolog/StateTransitionSubGraphs.py:131) (24 samples, 0.29%)</title><rect x="11.9976%" y="148" width="0.2906%" height="15" fill="rgb(223,33,50)" fg:x="991" fg:w="24"/><text x="12.2476%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:131) (53 samples, 0.64%)</title><rect x="11.9249%" y="132" width="0.6416%" height="15" fill="rgb(219,149,13)" fg:x="985" fg:w="53"/><text x="12.1749%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (23 samples, 0.28%)</title><rect x="12.2881%" y="148" width="0.2785%" height="15" fill="rgb(250,156,29)" fg:x="1015" fg:w="23"/><text x="12.5381%" y="158.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py:531) (11 samples, 0.13%)</title><rect x="12.6271%" y="180" width="0.1332%" height="15" fill="rgb(216,193,19)" fg:x="1043" fg:w="11"/><text x="12.8771%" y="190.50"></text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1243) (27 samples, 0.33%)</title><rect x="12.5666%" y="164" width="0.3269%" height="15" fill="rgb(216,135,14)" fg:x="1038" fg:w="27"/><text x="12.8166%" y="174.50"></text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1119) (56 samples, 0.68%)</title><rect x="13.8620%" y="228" width="0.6780%" height="15" fill="rgb(241,47,5)" fg:x="1145" fg:w="56"/><text x="14.1120%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:723) (235 samples, 2.85%)</title><rect x="12.8935%" y="196" width="2.8450%" height="15" fill="rgb(233,42,35)" fg:x="1065" fg:w="235"/><text x="13.1435%" y="206.50">ad..</text></g><g><title>&lt;genexpr&gt; (networkx/classes/graph.py:1024) (213 samples, 2.58%)</title><rect x="13.1598%" y="212" width="2.5787%" height="15" fill="rgb(231,13,6)" fg:x="1087" fg:w="213"/><text x="13.4098%" y="222.50">&lt;g..</text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1120) (99 samples, 1.20%)</title><rect x="14.5400%" y="228" width="1.1985%" height="15" fill="rgb(207,181,40)" fg:x="1201" fg:w="99"/><text x="14.7900%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:724) (17 samples, 0.21%)</title><rect x="15.7385%" y="196" width="0.2058%" height="15" fill="rgb(254,173,49)" fg:x="1300" fg:w="17"/><text x="15.9885%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:726) (17 samples, 0.21%)</title><rect x="15.9806%" y="196" width="0.2058%" height="15" fill="rgb(221,1,38)" fg:x="1320" fg:w="17"/><text x="16.2306%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:732) (42 samples, 0.51%)</title><rect x="16.1864%" y="196" width="0.5085%" height="15" fill="rgb(206,124,46)" fg:x="1337" fg:w="42"/><text x="16.4364%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:738) (579 samples, 7.01%)</title><rect x="16.6949%" y="196" width="7.0097%" height="15" fill="rgb(249,21,11)" fg:x="1379" fg:w="579"/><text x="16.9449%" y="206.50">add_edges..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:744) (204 samples, 2.47%)</title><rect x="23.7046%" y="196" width="2.4697%" height="15" fill="rgb(222,201,40)" fg:x="1958" fg:w="204"/><text x="23.9546%" y="206.50">ad..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:745) (25 samples, 0.30%)</title><rect x="26.1743%" y="196" width="0.3027%" height="15" fill="rgb(235,61,29)" fg:x="2162" fg:w="25"/><text x="26.4243%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:746) (79 samples, 0.96%)</title><rect x="26.4770%" y="196" width="0.9564%" height="15" fill="rgb(219,207,3)" fg:x="2187" fg:w="79"/><text x="26.7270%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:747) (80 samples, 0.97%)</title><rect x="27.4334%" y="196" width="0.9685%" height="15" fill="rgb(222,56,46)" fg:x="2266" fg:w="80"/><text x="27.6834%" y="206.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:51) (1,846 samples, 22.35%)</title><rect x="12.5666%" y="132" width="22.3487%" height="15" fill="rgb(239,76,54)" fg:x="1038" fg:w="1846"/><text x="12.8166%" y="142.50">fcn_metagraph_scc (exastolog/StateT..</text></g><g><title>from_scipy_sparse_matrix (networkx/convert_matrix.py:1103) (1,846 samples, 22.35%)</title><rect x="12.5666%" y="148" width="22.3487%" height="15" fill="rgb(231,124,27)" fg:x="1038" fg:w="1846"/><text x="12.8166%" y="158.50">from_scipy_sparse_matrix (networkx/..</text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1271) (1,819 samples, 22.02%)</title><rect x="12.8935%" y="164" width="22.0218%" height="15" fill="rgb(249,195,6)" fg:x="1065" fg:w="1819"/><text x="13.1435%" y="174.50">from_scipy_sparse_array (networkx/c..</text></g><g><title>add_weighted_edges_from (networkx/classes/graph.py:1024) (1,819 samples, 22.02%)</title><rect x="12.8935%" y="180" width="22.0218%" height="15" fill="rgb(237,174,47)" fg:x="1065" fg:w="1819"/><text x="13.1435%" y="190.50">add_weighted_edges_from (networkx/c..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:748) (538 samples, 6.51%)</title><rect x="28.4019%" y="196" width="6.5133%" height="15" fill="rgb(206,201,31)" fg:x="2346" fg:w="538"/><text x="28.6519%" y="206.50">add_edges..</text></g><g><title>__contains__ (_collections_abc.py:825) (48 samples, 0.58%)</title><rect x="35.1090%" y="180" width="0.5811%" height="15" fill="rgb(231,57,52)" fg:x="2900" fg:w="48"/><text x="35.3590%" y="190.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:54) (45 samples, 0.54%)</title><rect x="35.1453%" y="196" width="0.5448%" height="15" fill="rgb(248,177,22)" fg:x="2903" fg:w="45"/><text x="35.3953%" y="206.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:809) (78 samples, 0.94%)</title><rect x="34.9153%" y="148" width="0.9443%" height="15" fill="rgb(215,211,37)" fg:x="2884" fg:w="78"/><text x="35.1653%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (networkx/classes/function.py:1253) (75 samples, 0.91%)</title><rect x="34.9516%" y="164" width="0.9080%" height="15" fill="rgb(241,128,51)" fg:x="2887" fg:w="75"/><text x="35.2016%" y="174.50"></text></g><g><title>__iter__ (_collections_abc.py:906) (13 samples, 0.16%)</title><rect x="35.7022%" y="180" width="0.1574%" height="15" fill="rgb(227,165,31)" fg:x="2949" fg:w="13"/><text x="35.9522%" y="190.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:811) (49 samples, 0.59%)</title><rect x="35.8838%" y="148" width="0.5932%" height="15" fill="rgb(228,167,24)" fg:x="2964" fg:w="49"/><text x="36.1338%" y="158.50"></text></g><g><title>remove_edges_from (networkx/classes/digraph.py:812) (49 samples, 0.59%)</title><rect x="36.4770%" y="148" width="0.5932%" height="15" fill="rgb(228,143,12)" fg:x="3013" fg:w="49"/><text x="36.7270%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:52) (194 samples, 2.35%)</title><rect x="34.9153%" y="132" width="2.3487%" height="15" fill="rgb(249,149,8)" fg:x="2884" fg:w="194"/><text x="35.1653%" y="142.50">f..</text></g><g><title>remove_edges_from (networkx/classes/digraph.py:813) (16 samples, 0.19%)</title><rect x="37.0702%" y="148" width="0.1937%" height="15" fill="rgb(243,35,44)" fg:x="3062" fg:w="16"/><text x="37.3202%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:104) (14 samples, 0.17%)</title><rect x="37.4213%" y="148" width="0.1695%" height="15" fill="rgb(246,89,9)" fg:x="3091" fg:w="14"/><text x="37.6713%" y="158.50"></text></g><g><title>__getitem__ (networkx/classes/graph.py:517) (10 samples, 0.12%)</title><rect x="37.8087%" y="180" width="0.1211%" height="15" fill="rgb(233,213,13)" fg:x="3123" fg:w="10"/><text x="38.0587%" y="190.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:78) (25 samples, 0.30%)</title><rect x="37.6998%" y="148" width="0.3027%" height="15" fill="rgb(233,141,41)" fg:x="3114" fg:w="25"/><text x="37.9498%" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (networkx/algorithms/components/strongly_connected.py:78) (25 samples, 0.30%)</title><rect x="37.6998%" y="164" width="0.3027%" height="15" fill="rgb(239,167,4)" fg:x="3114" fg:w="25"/><text x="37.9498%" y="174.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:80) (59 samples, 0.71%)</title><rect x="38.0387%" y="148" width="0.7143%" height="15" fill="rgb(209,217,16)" fg:x="3142" fg:w="59"/><text x="38.2887%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:88) (106 samples, 1.28%)</title><rect x="38.8862%" y="148" width="1.2833%" height="15" fill="rgb(219,88,35)" fg:x="3212" fg:w="106"/><text x="39.1362%" y="158.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:89) (86 samples, 1.04%)</title><rect x="40.1695%" y="148" width="1.0412%" height="15" fill="rgb(220,193,23)" fg:x="3318" fg:w="86"/><text x="40.4195%" y="158.50"></text></g><g><title>__getitem__ (networkx/classes/graph.py:517) (70 samples, 0.85%)</title><rect x="41.4528%" y="164" width="0.8475%" height="15" fill="rgb(230,90,52)" fg:x="3424" fg:w="70"/><text x="41.7028%" y="174.50"></text></g><g><title>__getitem__ (networkx/classes/coreviews.py:82) (64 samples, 0.77%)</title><rect x="41.5254%" y="180" width="0.7748%" height="15" fill="rgb(252,106,19)" fg:x="3430" fg:w="64"/><text x="41.7754%" y="190.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:95) (163 samples, 1.97%)</title><rect x="41.2349%" y="148" width="1.9734%" height="15" fill="rgb(206,74,20)" fg:x="3406" fg:w="163"/><text x="41.4849%" y="158.50">s..</text></g><g><title>__iter__ (networkx/classes/coreviews.py:51) (75 samples, 0.91%)</title><rect x="42.3002%" y="164" width="0.9080%" height="15" fill="rgb(230,138,44)" fg:x="3494" fg:w="75"/><text x="42.5502%" y="174.50"></text></g><g><title>strongly_connected_components (networkx/algorithms/components/strongly_connected.py:96) (94 samples, 1.14%)</title><rect x="43.2082%" y="148" width="1.1380%" height="15" fill="rgb(235,182,43)" fg:x="3569" fg:w="94"/><text x="43.4582%" y="158.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:56) (587 samples, 7.11%)</title><rect x="37.2639%" y="132" width="7.1065%" height="15" fill="rgb(242,16,51)" fg:x="3078" fg:w="587"/><text x="37.5139%" y="142.50">fcn_metagr..</text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:65) (106 samples, 1.28%)</title><rect x="44.4068%" y="132" width="1.2833%" height="15" fill="rgb(248,9,4)" fg:x="3668" fg:w="106"/><text x="44.6568%" y="142.50"></text></g><g><title>_sum_duplicates (scipy/sparse/_coo.py:536) (34 samples, 0.41%)</title><rect x="45.7990%" y="180" width="0.4116%" height="15" fill="rgb(210,31,22)" fg:x="3783" fg:w="34"/><text x="46.0490%" y="190.50"></text></g><g><title>lexsort (&lt;__array_function__ internals&gt;:180) (34 samples, 0.41%)</title><rect x="45.7990%" y="196" width="0.4116%" height="15" fill="rgb(239,54,39)" fg:x="3783" fg:w="34"/><text x="46.0490%" y="206.50"></text></g><g><title>find (scipy/sparse/_extract.py:37) (53 samples, 0.64%)</title><rect x="45.7990%" y="148" width="0.6416%" height="15" fill="rgb(230,99,41)" fg:x="3783" fg:w="53"/><text x="46.0490%" y="158.50"></text></g><g><title>sum_duplicates (scipy/sparse/_coo.py:528) (53 samples, 0.64%)</title><rect x="45.7990%" y="164" width="0.6416%" height="15" fill="rgb(253,106,12)" fg:x="3783" fg:w="53"/><text x="46.0490%" y="174.50"></text></g><g><title>_sum_duplicates (scipy/sparse/_coo.py:546) (9 samples, 0.11%)</title><rect x="46.3317%" y="180" width="0.1090%" height="15" fill="rgb(213,46,41)" fg:x="3827" fg:w="9"/><text x="46.5817%" y="190.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:73) (59 samples, 0.71%)</title><rect x="45.7627%" y="132" width="0.7143%" height="15" fill="rgb(215,133,35)" fg:x="3780" fg:w="59"/><text x="46.0127%" y="142.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:52) (9 samples, 0.11%)</title><rect x="46.5133%" y="148" width="0.1090%" height="15" fill="rgb(213,28,5)" fg:x="3842" fg:w="9"/><text x="46.7633%" y="158.50"></text></g><g><title>__init__ (scipy/sparse/_compressed.py:33) (9 samples, 0.11%)</title><rect x="46.5133%" y="164" width="0.1090%" height="15" fill="rgb(215,77,49)" fg:x="3842" fg:w="9"/><text x="46.7633%" y="174.50"></text></g><g><title>asformat (scipy/sparse/_base.py:377) (9 samples, 0.11%)</title><rect x="46.5133%" y="180" width="0.1090%" height="15" fill="rgb(248,100,22)" fg:x="3842" fg:w="9"/><text x="46.7633%" y="190.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:80) (11 samples, 0.13%)</title><rect x="46.5133%" y="132" width="0.1332%" height="15" fill="rgb(208,67,9)" fg:x="3842" fg:w="11"/><text x="46.7633%" y="142.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py:531) (9 samples, 0.11%)</title><rect x="46.6828%" y="180" width="0.1090%" height="15" fill="rgb(219,133,21)" fg:x="3856" fg:w="9"/><text x="46.9328%" y="190.50"></text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1243) (21 samples, 0.25%)</title><rect x="46.6465%" y="164" width="0.2542%" height="15" fill="rgb(246,46,29)" fg:x="3853" fg:w="21"/><text x="46.8965%" y="174.50"></text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1119) (26 samples, 0.31%)</title><rect x="47.6877%" y="228" width="0.3148%" height="15" fill="rgb(246,185,52)" fg:x="3939" fg:w="26"/><text x="47.9377%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:723) (195 samples, 2.36%)</title><rect x="46.9007%" y="196" width="2.3608%" height="15" fill="rgb(252,136,11)" fg:x="3874" fg:w="195"/><text x="47.1507%" y="206.50">ad..</text></g><g><title>&lt;genexpr&gt; (networkx/classes/graph.py:1024) (183 samples, 2.22%)</title><rect x="47.0460%" y="212" width="2.2155%" height="15" fill="rgb(219,138,53)" fg:x="3886" fg:w="183"/><text x="47.2960%" y="222.50">&lt;..</text></g><g><title>_csr_gen_triples (networkx/convert_matrix.py:1120) (104 samples, 1.26%)</title><rect x="48.0024%" y="228" width="1.2591%" height="15" fill="rgb(211,51,23)" fg:x="3965" fg:w="104"/><text x="48.2524%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:724) (19 samples, 0.23%)</title><rect x="49.2615%" y="196" width="0.2300%" height="15" fill="rgb(247,221,28)" fg:x="4069" fg:w="19"/><text x="49.5115%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:726) (13 samples, 0.16%)</title><rect x="49.5642%" y="196" width="0.1574%" height="15" fill="rgb(251,222,45)" fg:x="4094" fg:w="13"/><text x="49.8142%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:732) (34 samples, 0.41%)</title><rect x="49.7215%" y="196" width="0.4116%" height="15" fill="rgb(217,162,53)" fg:x="4107" fg:w="34"/><text x="49.9715%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:738) (523 samples, 6.33%)</title><rect x="50.1332%" y="196" width="6.3317%" height="15" fill="rgb(229,93,14)" fg:x="4141" fg:w="523"/><text x="50.3832%" y="206.50">add_edge..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:744) (266 samples, 3.22%)</title><rect x="56.4649%" y="196" width="3.2203%" height="15" fill="rgb(209,67,49)" fg:x="4664" fg:w="266"/><text x="56.7149%" y="206.50">add..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:745) (24 samples, 0.29%)</title><rect x="59.6852%" y="196" width="0.2906%" height="15" fill="rgb(213,87,29)" fg:x="4930" fg:w="24"/><text x="59.9352%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:746) (99 samples, 1.20%)</title><rect x="59.9758%" y="196" width="1.1985%" height="15" fill="rgb(205,151,52)" fg:x="4954" fg:w="99"/><text x="60.2258%" y="206.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py:747) (59 samples, 0.71%)</title><rect x="61.1743%" y="196" width="0.7143%" height="15" fill="rgb(253,215,39)" fg:x="5053" fg:w="59"/><text x="61.4243%" y="206.50"></text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:86) (1,746 samples, 21.14%)</title><rect x="46.6465%" y="132" width="21.1380%" height="15" fill="rgb(221,220,41)" fg:x="3853" fg:w="1746"/><text x="46.8965%" y="142.50">fcn_metagraph_scc (exastolog/Stat..</text></g><g><title>from_scipy_sparse_matrix (networkx/convert_matrix.py:1103) (1,746 samples, 21.14%)</title><rect x="46.6465%" y="148" width="21.1380%" height="15" fill="rgb(218,133,21)" fg:x="3853" fg:w="1746"/><text x="46.8965%" y="158.50">from_scipy_sparse_matrix (network..</text></g><g><title>from_scipy_sparse_array (networkx/convert_matrix.py:1271) (1,725 samples, 20.88%)</title><rect x="46.9007%" y="164" width="20.8838%" height="15" fill="rgb(221,193,43)" fg:x="3874" fg:w="1725"/><text x="47.1507%" y="174.50">from_scipy_sparse_array (networkx..</text></g><g><title>add_weighted_edges_from (networkx/classes/graph.py:1024) (1,725 samples, 20.88%)</title><rect x="46.9007%" y="180" width="20.8838%" height="15" fill="rgb(240,128,52)" fg:x="3874" fg:w="1725"/><text x="47.1507%" y="190.50">add_weighted_edges_from (networkx..</text></g><g><title>add_edges_from (networkx/classes/digraph.py:748) (487 samples, 5.90%)</title><rect x="61.8886%" y="196" width="5.8959%" height="15" fill="rgb(253,114,12)" fg:x="5112" fg:w="487"/><text x="62.1386%" y="206.50">add_edg..</text></g><g><title>topological_generations (networkx/algorithms/dag.py:203) (17 samples, 0.21%)</title><rect x="67.9177%" y="164" width="0.2058%" height="15" fill="rgb(215,223,47)" fg:x="5610" fg:w="17"/><text x="68.1677%" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (networkx/algorithms/dag.py:203) (17 samples, 0.21%)</title><rect x="67.9177%" y="180" width="0.2058%" height="15" fill="rgb(248,225,23)" fg:x="5610" fg:w="17"/><text x="68.1677%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:204) (9 samples, 0.11%)</title><rect x="68.1235%" y="164" width="0.1090%" height="15" fill="rgb(250,108,0)" fg:x="5627" fg:w="9"/><text x="68.3735%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (networkx/algorithms/dag.py:204) (9 samples, 0.11%)</title><rect x="68.1235%" y="180" width="0.1090%" height="15" fill="rgb(228,208,7)" fg:x="5627" fg:w="9"/><text x="68.3735%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:206) (48 samples, 0.58%)</title><rect x="68.2324%" y="164" width="0.5811%" height="15" fill="rgb(244,45,10)" fg:x="5636" fg:w="48"/><text x="68.4824%" y="174.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:210) (55 samples, 0.67%)</title><rect x="68.8378%" y="164" width="0.6659%" height="15" fill="rgb(207,125,25)" fg:x="5686" fg:w="55"/><text x="69.0878%" y="174.50"></text></g><g><title>__contains__ (networkx/classes/graph.py:467) (53 samples, 0.64%)</title><rect x="68.8620%" y="180" width="0.6416%" height="15" fill="rgb(210,195,18)" fg:x="5688" fg:w="53"/><text x="69.1120%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:212) (78 samples, 0.94%)</title><rect x="69.5036%" y="164" width="0.9443%" height="15" fill="rgb(249,80,12)" fg:x="5741" fg:w="78"/><text x="69.7536%" y="174.50"></text></g><g><title>successors (networkx/classes/digraph.py:854) (53 samples, 0.64%)</title><rect x="69.8063%" y="180" width="0.6416%" height="15" fill="rgb(221,65,9)" fg:x="5766" fg:w="53"/><text x="70.0563%" y="190.50"></text></g><g><title>topological_generations (networkx/algorithms/dag.py:214) (852 samples, 10.31%)</title><rect x="70.4479%" y="164" width="10.3148%" height="15" fill="rgb(235,49,36)" fg:x="5819" fg:w="852"/><text x="70.6979%" y="174.50">topological_gen..</text></g><g><title>topological_generations (networkx/algorithms/dag.py:218) (411 samples, 4.98%)</title><rect x="80.8232%" y="164" width="4.9758%" height="15" fill="rgb(225,32,20)" fg:x="6676" fg:w="411"/><text x="81.0732%" y="174.50">topolo..</text></g><g><title>topological_sort (networkx/algorithms/dag.py:292) (1,478 samples, 17.89%)</title><rect x="67.9177%" y="148" width="17.8935%" height="15" fill="rgb(215,141,46)" fg:x="5610" fg:w="1478"/><text x="68.1677%" y="158.50">topological_sort (networkx/a..</text></g><g><title>fcn_metagraph_scc (exastolog/StateTransitionSubGraphs.py:87) (1,493 samples, 18.08%)</title><rect x="67.7845%" y="132" width="18.0751%" height="15" fill="rgb(250,160,47)" fg:x="5599" fg:w="1493"/><text x="68.0345%" y="142.50">fcn_metagraph_scc (exastolog..</text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:192) (6,138 samples, 74.31%)</title><rect x="11.5981%" y="116" width="74.3099%" height="15" fill="rgb(216,222,40)" fg:x="958" fg:w="6138"/><text x="11.8481%" y="126.50">fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:192)</text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:197) (110 samples, 1.33%)</title><rect x="85.9080%" y="116" width="1.3317%" height="15" fill="rgb(234,217,39)" fg:x="7096" fg:w="110"/><text x="86.1580%" y="126.50"></text></g><g><title>fcn_scc_subgraphs (exastolog/StateTransitionSubGraphs.py:198) (332 samples, 4.02%)</title><rect x="87.2397%" y="116" width="4.0194%" height="15" fill="rgb(207,178,40)" fg:x="7206" fg:w="332"/><text x="87.4897%" y="126.50">fcn_..</text></g><g><title>__init__ (exastolog/Simulation.py:42) (6,942 samples, 84.04%)</title><rect x="7.2881%" y="84" width="84.0436%" height="15" fill="rgb(221,136,13)" fg:x="602" fg:w="6942"/><text x="7.5381%" y="94.50">__init__ (exastolog/Simulation.py:42)</text></g><g><title>__init__ (exastolog/StateTransitionSubGraphs.py:45) (6,942 samples, 84.04%)</title><rect x="7.2881%" y="100" width="84.0436%" height="15" fill="rgb(249,199,10)" fg:x="602" fg:w="6942"/><text x="7.5381%" y="110.50">__init__ (exastolog/StateTransitionSubGraphs.py:45)</text></g><g><title>__init__ (scipy/sparse/_lil.py:110) (190 samples, 2.30%)</title><rect x="91.3680%" y="132" width="2.3002%" height="15" fill="rgb(249,222,13)" fg:x="7547" fg:w="190"/><text x="91.6180%" y="142.50">_..</text></g><g><title>split_calc_inverse (exastolog/Solution.py:172) (255 samples, 3.09%)</title><rect x="91.3317%" y="116" width="3.0872%" height="15" fill="rgb(244,185,38)" fg:x="7544" fg:w="255"/><text x="91.5817%" y="126.50">spl..</text></g><g><title>__init__ (scipy/sparse/_lil.py:111) (62 samples, 0.75%)</title><rect x="93.6683%" y="132" width="0.7506%" height="15" fill="rgb(236,202,9)" fg:x="7737" fg:w="62"/><text x="93.9183%" y="142.50"></text></g><g><title>__getitem__ (scipy/sparse/_index.py:47) (10 samples, 0.12%)</title><rect x="94.4431%" y="132" width="0.1211%" height="15" fill="rgb(250,229,37)" fg:x="7801" fg:w="10"/><text x="94.6931%" y="142.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:191) (12 samples, 0.15%)</title><rect x="94.4431%" y="116" width="0.1453%" height="15" fill="rgb(206,174,23)" fg:x="7801" fg:w="12"/><text x="94.6931%" y="126.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:196) (12 samples, 0.15%)</title><rect x="94.5884%" y="116" width="0.1453%" height="15" fill="rgb(211,33,43)" fg:x="7813" fg:w="12"/><text x="94.8384%" y="126.50"></text></g><g><title>__init__ (scipy/sparse/_lil.py:110) (30 samples, 0.36%)</title><rect x="94.9879%" y="148" width="0.3632%" height="15" fill="rgb(245,58,50)" fg:x="7846" fg:w="30"/><text x="95.2379%" y="158.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:59) (38 samples, 0.46%)</title><rect x="94.9758%" y="132" width="0.4600%" height="15" fill="rgb(244,68,36)" fg:x="7845" fg:w="38"/><text x="95.2258%" y="142.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:63) (16 samples, 0.19%)</title><rect x="95.4358%" y="132" width="0.1937%" height="15" fill="rgb(232,229,15)" fg:x="7883" fg:w="16"/><text x="95.6858%" y="142.50"></text></g><g><title>__init__ (scipy/sparse/_lil.py:111) (9 samples, 0.11%)</title><rect x="95.5206%" y="148" width="0.1090%" height="15" fill="rgb(254,30,23)" fg:x="7890" fg:w="9"/><text x="95.7706%" y="158.50"></text></g><g><title>numeric (scikits/umfpack/umfpack.py:557) (19 samples, 0.23%)</title><rect x="95.6901%" y="180" width="0.2300%" height="15" fill="rgb(235,160,14)" fg:x="7904" fg:w="19"/><text x="95.9401%" y="190.50"></text></g><g><title>symbolic (scikits/umfpack/umfpack.py:522) (19 samples, 0.23%)</title><rect x="95.6901%" y="196" width="0.2300%" height="15" fill="rgb(212,155,44)" fg:x="7904" fg:w="19"/><text x="95.9401%" y="206.50"></text></g><g><title>umfpack_dl_symbolic (scikits/umfpack/_umfpack.py:575) (19 samples, 0.23%)</title><rect x="95.6901%" y="212" width="0.2300%" height="15" fill="rgb(226,2,50)" fg:x="7904" fg:w="19"/><text x="95.9401%" y="222.50"></text></g><g><title>spsolve (scipy/sparse/linalg/_dsolve/linsolve.py:282) (264 samples, 3.20%)</title><rect x="95.6780%" y="148" width="3.1961%" height="15" fill="rgb(234,177,6)" fg:x="7903" fg:w="264"/><text x="95.9280%" y="158.50">sps..</text></g><g><title>factorized (scipy/sparse/linalg/_dsolve/linsolve.py:563) (263 samples, 3.18%)</title><rect x="95.6901%" y="164" width="3.1840%" height="15" fill="rgb(217,24,9)" fg:x="7904" fg:w="263"/><text x="95.9401%" y="174.50">fac..</text></g><g><title>numeric (scikits/umfpack/umfpack.py:565) (244 samples, 2.95%)</title><rect x="95.9201%" y="180" width="2.9540%" height="15" fill="rgb(220,13,46)" fg:x="7923" fg:w="244"/><text x="96.1701%" y="190.50">num..</text></g><g><title>umfpack_dl_numeric (scikits/umfpack/_umfpack.py:591) (244 samples, 2.95%)</title><rect x="95.9201%" y="196" width="2.9540%" height="15" fill="rgb(239,221,27)" fg:x="7923" fg:w="244"/><text x="96.1701%" y="206.50">umf..</text></g><g><title>spsolve (scipy/sparse/linalg/_dsolve/linsolve.py:300) (34 samples, 0.41%)</title><rect x="98.8741%" y="148" width="0.4116%" height="15" fill="rgb(222,198,25)" fg:x="8167" fg:w="34"/><text x="99.1241%" y="158.50"></text></g><g><title>solve (scipy/sparse/linalg/_dsolve/linsolve.py:568) (34 samples, 0.41%)</title><rect x="98.8741%" y="164" width="0.4116%" height="15" fill="rgb(211,99,13)" fg:x="8167" fg:w="34"/><text x="99.1241%" y="174.50"></text></g><g><title>solve (scikits/umfpack/umfpack.py:709) (33 samples, 0.40%)</title><rect x="98.8862%" y="180" width="0.3995%" height="15" fill="rgb(232,111,31)" fg:x="8168" fg:w="33"/><text x="99.1362%" y="190.50"></text></g><g><title>umfpack_dl_solve (scikits/umfpack/_umfpack.py:415) (33 samples, 0.40%)</title><rect x="98.8862%" y="196" width="0.3995%" height="15" fill="rgb(245,82,37)" fg:x="8168" fg:w="33"/><text x="99.1362%" y="206.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:78) (300 samples, 3.63%)</title><rect x="95.6780%" y="132" width="3.6320%" height="15" fill="rgb(227,149,46)" fg:x="7903" fg:w="300"/><text x="95.9280%" y="142.50">fcn_..</text></g><g><title>fcn_block_inversion (exastolog/Solution.py:79) (19 samples, 0.23%)</title><rect x="99.3099%" y="132" width="0.2300%" height="15" fill="rgb(218,36,50)" fg:x="8203" fg:w="19"/><text x="99.5599%" y="142.50"></text></g><g><title>__setitem__ (scipy/sparse/_lil.py:331) (16 samples, 0.19%)</title><rect x="99.5400%" y="148" width="0.1937%" height="15" fill="rgb(226,80,48)" fg:x="8222" fg:w="16"/><text x="99.7900%" y="158.50"></text></g><g><title>__setitem__ (scipy/sparse/_index.py:137) (16 samples, 0.19%)</title><rect x="99.5400%" y="164" width="0.1937%" height="15" fill="rgb(238,224,15)" fg:x="8222" fg:w="16"/><text x="99.7900%" y="174.50"></text></g><g><title>_set_arrayXarray_sparse (scipy/sparse/_lil.py:319) (16 samples, 0.19%)</title><rect x="99.5400%" y="180" width="0.1937%" height="15" fill="rgb(241,136,10)" fg:x="8222" fg:w="16"/><text x="99.7900%" y="190.50"></text></g><g><title>_set_arrayXarray (scipy/sparse/_lil.py:303) (16 samples, 0.19%)</title><rect x="99.5400%" y="196" width="0.1937%" height="15" fill="rgb(208,32,45)" fg:x="8222" fg:w="16"/><text x="99.7900%" y="206.50"></text></g><g><title>fcn_block_inversion (exastolog/Solution.py:84) (17 samples, 0.21%)</title><rect x="99.5400%" y="132" width="0.2058%" height="15" fill="rgb(207,135,9)" fg:x="8222" fg:w="17"/><text x="99.7900%" y="142.50"></text></g><g><title>split_calc_inverse (exastolog/Solution.py:267) (407 samples, 4.93%)</title><rect x="94.8668%" y="116" width="4.9274%" height="15" fill="rgb(206,86,44)" fg:x="7836" fg:w="407"/><text x="95.1168%" y="126.50">split_..</text></g><g><title>&lt;module&gt; (run.py:4) (7,859 samples, 95.15%)</title><rect x="4.6852%" y="68" width="95.1453%" height="15" fill="rgb(245,177,15)" fg:x="387" fg:w="7859"/><text x="4.9352%" y="78.50">&lt;module&gt; (run.py:4)</text></g><g><title>__init__ (exastolog/Simulation.py:43) (702 samples, 8.50%)</title><rect x="91.3317%" y="84" width="8.4988%" height="15" fill="rgb(206,64,50)" fg:x="7544" fg:w="702"/><text x="91.5817%" y="94.50">__init__ (ex..</text></g><g><title>__init__ (exastolog/Solution.py:40) (702 samples, 8.50%)</title><rect x="91.3317%" y="100" width="8.4988%" height="15" fill="rgb(234,36,40)" fg:x="7544" fg:w="702"/><text x="91.5817%" y="110.50">__init__ (ex..</text></g><g><title>all (8,260 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="8260"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (run.py:9) (14 samples, 0.17%)</title><rect x="99.8305%" y="68" width="0.1695%" height="15" fill="rgb(210,75,36)" fg:x="8246" fg:w="14"/><text x="100.0805%" y="78.50"></text></g><g><title>get_last_states_probtraj (exastolog/Simulation.py:52) (9 samples, 0.11%)</title><rect x="99.8910%" y="84" width="0.1090%" height="15" fill="rgb(229,88,21)" fg:x="8251" fg:w="9"/><text x="100.1410%" y="94.50"></text></g><g><title>nonzero (scipy/sparse/_base.py:860) (9 samples, 0.11%)</title><rect x="99.8910%" y="100" width="0.1090%" height="15" fill="rgb(252,204,47)" fg:x="8251" fg:w="9"/><text x="100.1410%" y="110.50"></text></g><g><title>tocoo (scipy/sparse/_base.py:1005) (9 samples, 0.11%)</title><rect x="99.8910%" y="116" width="0.1090%" height="15" fill="rgb(208,77,27)" fg:x="8251" fg:w="9"/><text x="100.1410%" y="126.50"></text></g></svg></svg>